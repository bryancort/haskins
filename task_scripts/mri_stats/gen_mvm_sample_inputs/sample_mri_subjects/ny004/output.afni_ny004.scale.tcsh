echo auto-generated by afni_proc.py, Wed Oct  8 10:50:13 2014
auto-generated by afni_proc.py, Wed Oct  8 10:50:13 2014
echo (version 4.20, Jul 11, 2014)
(version 4.20, Jul 11, 2014)
echo execution started: `date`
date
execution started: Wed Oct  8 10:50:13 EDT 2014
afni -ver
Version AFNI_2011_12_21_1014
[[Precompiled binary macosx_10.7_Intel_64: Jul 18 2014]]
afni_history -check_date 13 May 2014
-- is current: afni_history as new as: 13 May 2014
               most recent entry is:   18 Jul 2014
if ( 0 ) then
if ( 0 > 0 ) then
set subj = ny004
endif
set output_dir = ny004.scale
if ( -d ny004.scale ) then
set runs = ( `count -digits 2 1 6` )
count -digits 2 1 6
mkdir ny004.scale
mkdir ny004.scale/stimuli
cp stim_times/bilingual/bil-afni_cond01.txt stim_times/bilingual/bil-afni_cond02.txt stim_times/bilingual/bil-afni_cond03.txt stim_times/bilingual/bil-afni_cond04.txt stim_times/bilingual/bil-afni_cond05.txt stim_times/bilingual/bil-afni_cond06.txt stim_times/bilingual/bil-afni_cond07.txt stim_times/bilingual/bil-afni_cond08.txt stim_times/bilingual/bil-afni_cond09.txt stim_times/bilingual/bil-afni_cond10.txt stim_times/bilingual/bil-afni_cond11.txt stim_times/bilingual/bil-afni_cond12.txt ny004.scale/stimuli
cp ny004.results/dfile_rall.1D ny004.scale
cp -rv ny004.results/anat_final.ny004+tlrc.BRIK ny004.results/anat_final.ny004+tlrc.HEAD ny004.scale
ny004.results/anat_final.ny004+tlrc.BRIK -> ny004.scale/anat_final.ny004+tlrc.BRIK
ny004.results/anat_final.ny004+tlrc.HEAD -> ny004.scale/anat_final.ny004+tlrc.HEAD
3dTcat -prefix ny004.scale/pb00.ny004.r01.tcat ny004.results/pb03.ny004.r01.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny004.scale/pb00.ny004.r02.tcat ny004.results/pb03.ny004.r02.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny004.scale/pb00.ny004.r03.tcat ny004.results/pb03.ny004.r03.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny004.scale/pb00.ny004.r04.tcat ny004.results/pb03.ny004.r04.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny004.scale/pb00.ny004.r05.tcat ny004.results/pb03.ny004.r05.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny004.scale/pb00.ny004.r06.tcat ny004.results/pb03.ny004.r06.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
set tr_counts = ( 126 126 126 126 126 126 )
cd ny004.scale
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 )
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny004.r01.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53042 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny004.r02.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 52640 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny004.r03.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 52641 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny004.r04.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 52708 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny004.r05.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 52526 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny004.r06.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 52413 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D
foreach run ( 01 02 03 04 05 06 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb00.ny004.r01.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny004.r01.tcat+tlrc
++ Forming automask
 + Fixed clip level = 165.255722
 + Used gradual clip level = 157.003677 .. 180.090164
 + Number voxels above clip level = 53039
 + Clustering voxels ...
 + Largest cluster has 53039 voxels
 + Clustering voxels ...
 + Largest cluster has 52967 voxels
 + Filled    75 voxels in small holes; now have 53042 voxels
 + Clustering voxels ...
 + Largest cluster has 53042 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 119758 voxels
 + Mask now has 53042 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 111865 voxels
++ 60935 voxels in the mask [out of 172800: 35.26%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r01+tlrc.BRIK
++ CPU time = 0.190000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb00.ny004.r02.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny004.r02.tcat+tlrc
++ Forming automask
 + Fixed clip level = 165.953232
 + Used gradual clip level = 157.223206 .. 180.473099
 + Number voxels above clip level = 52631
 + Clustering voxels ...
 + Largest cluster has 52631 voxels
 + Clustering voxels ...
 + Largest cluster has 52561 voxels
 + Filled    79 voxels in small holes; now have 52640 voxels
 + Clustering voxels ...
 + Largest cluster has 52640 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 120160 voxels
 + Mask now has 52640 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 112324 voxels
++ 60476 voxels in the mask [out of 172800: 35.00%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r02+tlrc.BRIK
++ CPU time = 0.180000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb00.ny004.r03.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny004.r03.tcat+tlrc
++ Forming automask
 + Fixed clip level = 166.288315
 + Used gradual clip level = 157.367310 .. 180.854141
 + Number voxels above clip level = 52619
 + Clustering voxels ...
 + Largest cluster has 52619 voxels
 + Clustering voxels ...
 + Largest cluster has 52554 voxels
 + Filled    87 voxels in small holes; now have 52641 voxels
 + Clustering voxels ...
 + Largest cluster has 52641 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 120159 voxels
 + Mask now has 52641 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 112313 voxels
++ 60487 voxels in the mask [out of 172800: 35.00%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r03+tlrc.BRIK
++ CPU time = 0.180000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r04 pb00.ny004.r04.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny004.r04.tcat+tlrc
++ Forming automask
 + Fixed clip level = 165.719482
 + Used gradual clip level = 156.585800 .. 180.040741
 + Number voxels above clip level = 52693
 + Clustering voxels ...
 + Largest cluster has 52693 voxels
 + Clustering voxels ...
 + Largest cluster has 52632 voxels
 + Filled    76 voxels in small holes; now have 52708 voxels
 + Clustering voxels ...
 + Largest cluster has 52708 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 120092 voxels
 + Mask now has 52708 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 112289 voxels
++ 60511 voxels in the mask [out of 172800: 35.02%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r04+tlrc.BRIK
++ CPU time = 0.190000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r05 pb00.ny004.r05.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny004.r05.tcat+tlrc
++ Forming automask
 + Fixed clip level = 166.584946
 + Used gradual clip level = 157.182114 .. 180.287842
 + Number voxels above clip level = 52513
 + Clustering voxels ...
 + Largest cluster has 52513 voxels
 + Clustering voxels ...
 + Largest cluster has 52445 voxels
 + Filled    81 voxels in small holes; now have 52526 voxels
 + Clustering voxels ...
 + Largest cluster has 52526 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 120274 voxels
 + Mask now has 52526 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 112429 voxels
++ 60371 voxels in the mask [out of 172800: 34.94%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r05+tlrc.BRIK
++ CPU time = 0.180000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r06 pb00.ny004.r06.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny004.r06.tcat+tlrc
++ Forming automask
 + Fixed clip level = 166.429993
 + Used gradual clip level = 157.278412 .. 180.037018
 + Number voxels above clip level = 52395
 + Clustering voxels ...
 + Largest cluster has 52395 voxels
 + Clustering voxels ...
 + Largest cluster has 52330 voxels
 + Filled    83 voxels in small holes; now have 52413 voxels
 + Clustering voxels ...
 + Largest cluster has 52413 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 120387 voxels
 + Mask now has 52413 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 112527 voxels
++ 60273 voxels in the mask [out of 172800: 34.88%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   7 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r06+tlrc.BRIK
++ CPU time = 0.180000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.HEAD -union -prefix full_mask.ny004
++ processing 6 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 6 volumes gives min count 0
++ voxel limits: 0 clipped, 61277 survived, 111523 were zero
++ writing result full_mask.ny004...
++ Output dataset ./full_mask.ny004+tlrc.BRIK
foreach run ( 01 02 03 04 05 06 )
3dTstat -prefix rm.mean_r01 pb00.ny004.r01.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb00.ny004.r01.tcat+tlrc -b rm.mean_r01+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny004.r01.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny004.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb00.ny004.r02.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb00.ny004.r02.tcat+tlrc -b rm.mean_r02+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny004.r02.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny004.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb00.ny004.r03.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb00.ny004.r03.tcat+tlrc -b rm.mean_r03+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny004.r03.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny004.r03.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r04 pb00.ny004.r04.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r04+tlrc.BRIK
3dcalc -a pb00.ny004.r04.tcat+tlrc -b rm.mean_r04+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny004.r04.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny004.r04.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r05 pb00.ny004.r05.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r05+tlrc.BRIK
3dcalc -a pb00.ny004.r05.tcat+tlrc -b rm.mean_r05+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny004.r05.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny004.r05.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r06 pb00.ny004.r06.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r06+tlrc.BRIK
3dcalc -a pb00.ny004.r06.tcat+tlrc -b rm.mean_r06+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny004.r06.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny004.r06.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 6 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 6 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 6 -show_censor_count -censor_prev_TR -censor_motion 0.5 motion_ny004
total number of censored TRs = 2
1deval -a motion_ny004_censor.1D -b outcount_ny004_censor.1D -expr a*b
3dDeconvolve -input pb01.ny004.r01.scale+tlrc.HEAD pb01.ny004.r02.scale+tlrc.HEAD pb01.ny004.r03.scale+tlrc.HEAD pb01.ny004.r04.scale+tlrc.HEAD pb01.ny004.r05.scale+tlrc.HEAD pb01.ny004.r06.scale+tlrc.HEAD -censor censor_ny004_combined_2.1D -polort 2 -float -local_times -num_stimts 18 -stim_times 1 stimuli/bil-afni_cond01.txt GAM -stim_label 1 english_speech_wrd -stim_times 2 stimuli/bil-afni_cond02.txt GAM -stim_label 2 english_speech_psd -stim_times 3 stimuli/bil-afni_cond03.txt GAM -stim_label 3 english_speech_cat -stim_times 4 stimuli/bil-afni_cond04.txt GAM -stim_label 4 english_print_psd -stim_times 5 stimuli/bil-afni_cond05.txt GAM -stim_label 5 english_print_wrd -stim_times 6 stimuli/bil-afni_cond06.txt GAM -stim_label 6 english_print_cat -stim_times 7 stimuli/bil-afni_cond07.txt GAM -stim_label 7 hebrew_speech_wrd -stim_times 8 stimuli/bil-afni_cond08.txt GAM -stim_label 8 hebrew_speech_psd -stim_times 9 stimuli/bil-afni_cond09.txt GAM -stim_label 9 hebrew_speech_cat -stim_times 10 stimuli/bil-afni_cond10.txt GAM -stim_label 10 hebrew_print_psd -stim_times 11 stimuli/bil-afni_cond11.txt GAM -stim_label 11 hebrew_print_wrd -stim_times 12 stimuli/bil-afni_cond12.txt GAM -stim_label 12 hebrew_print_cat -stim_file 13 motion_demean.1D[0] -stim_base 13 -stim_label 13 roll -stim_file 14 motion_demean.1D[1] -stim_base 14 -stim_label 14 pitch -stim_file 15 motion_demean.1D[2] -stim_base 15 -stim_label 15 yaw -stim_file 16 motion_demean.1D[3] -stim_base 16 -stim_label 16 dS -stim_file 17 motion_demean.1D[4] -stim_base 17 -stim_label 17 dL -stim_file 18 motion_demean.1D[5] -stim_base 18 -stim_label 18 dP -num_glt 17 -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat -glt_label 1 English_print_and_speech -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat -glt_label 2 Hebrew_print_and_speech -gltsym SYM: +english_speech_wrd +english_speech_psd                     
    +english_speech_cat -glt_label 3 English_speech -gltsym SYM: +english_print_psd +english_print_wrd +english_print_cat -glt_label 4 English_print -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat -glt_label 5 Hebrew_speech -gltsym SYM: +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat -glt_label 6 Hebrew_print -gltsym SYM: +english_speech_wrd -english_speech_psd -glt_label 7 English_speech_lexicality -gltsym SYM: +english_print_psd -english_print_wrd -glt_label 8 English_print_lexicality -gltsym SYM: +hebrew_speech_wrd -hebrew_speech_psd -glt_label 9 Hebrew_speech_lexicality -gltsym SYM: +hebrew_print_psd -hebrew_print_wrd -glt_label 10 Hebrew_print_lexicality -gltsym SYM: +english_speech_wrd -english_speech_psd -english_print_psd  
    +english_print_wrd -glt_label 11 LexicalityXmodality_English -gltsym SYM: +hebrew_speech_wrd -hebrew_speech_psd -hebrew_print_psd     
    +hebrew_print_wrd -glt_label 12 LexicalityXmodality_Hebrew -gltsym SYM: +english_print_psd +english_print_wrd +english_print_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 13 English_print-Hebrew_print -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat -glt_label 14 English_speech-Hebrew_speech -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat                  
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat                  
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 15 English-Hebrew -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -english_print_psd -english_print_wrd -english_print_cat -glt_label 16 English-speech-English_print -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 17 Hebrew_speech-Hebrew_print -jobs 16 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.ny004 -errts errts.ny004 -bucket stats.ny004
++ 3dDeconvolve: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ loading dataset pb01.ny004.r01.scale+tlrc.HEAD pb01.ny004.r02.scale+tlrc.HEAD pb01.ny004.r03.scale+tlrc.HEAD pb01.ny004.r04.scale+tlrc.HEAD pb01.ny004.r05.scale+tlrc.HEAD pb01.ny004.r06.scale+tlrc.HEAD
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 126 252 378 504 630
++ STAT automask has 58799 voxels (out of 172800 = 34.0%)
++ Skipping check for initial transients
++ Input polort=2; Longest run=252.0 s; Recommended minimum polort=2 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times 1 using LOCAL times
*+ WARNING: '-stim_times 1' file 'stimuli/bil-afni_cond01.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 2 using LOCAL times
*+ WARNING: '-stim_times 2' file 'stimuli/bil-afni_cond02.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 3 using LOCAL times
*+ WARNING: '-stim_times 3' file 'stimuli/bil-afni_cond03.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 4 using LOCAL times
*+ WARNING: '-stim_times 4' file 'stimuli/bil-afni_cond04.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 5 using LOCAL times
*+ WARNING: '-stim_times 5' file 'stimuli/bil-afni_cond05.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 6 using LOCAL times
*+ WARNING: '-stim_times 6' file 'stimuli/bil-afni_cond06.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 7 using LOCAL times
*+ WARNING: '-stim_times 7' file 'stimuli/bil-afni_cond07.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 8 using LOCAL times
*+ WARNING: '-stim_times 8' file 'stimuli/bil-afni_cond08.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 9 using LOCAL times
*+ WARNING: '-stim_times 9' file 'stimuli/bil-afni_cond09.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 10 using LOCAL times
*+ WARNING: '-stim_times 10' file 'stimuli/bil-afni_cond10.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 11 using LOCAL times
*+ WARNING: '-stim_times 11' file 'stimuli/bil-afni_cond11.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 12 using LOCAL times
*+ WARNING: '-stim_times 12' file 'stimuli/bil-afni_cond12.txt' has 10 rows, but dataset has 6 time blocks
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd                     
    +english_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd +english_print_wrd +english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd -english_speech_psd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd -english_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd -hebrew_speech_psd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_print_psd -hebrew_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd -english_speech_psd -english_print_psd  
    +english_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0  -1   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd -hebrew_speech_psd -hebrew_print_psd     
    +hebrew_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0  -1   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd +english_print_wrd +english_print_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0  -1  -1  -1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat                  
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat                  
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -english_print_psd -english_print_wrd -english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
++ Number of time points: 756 (before censor) ; 754 (after)
 + Number of parameters:  36 [24 baseline ; 12 signal]
++ total shared memory needed = 1,105,920,000 bytes (about 1.1 billion [giga])
++ mmap() memory allocated: 1,105,920,000 bytes (about 1.1 billion [giga])
++ Memory required for output bricks = 1,105,920,000 bytes (about 1.1 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb01.ny004.r01.scale+tlrc.HEAD pb01.ny004.r02.scale+tlrc.HEAD pb01.ny004.r03.scale+tlrc.HEAD pb01.ny004.r04.scale+tlrc.HEAD pb01.ny004.r05.scale+tlrc.HEAD pb01.ny004.r06.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.ny004_REML -Rvar stats.ny004_REMLvar \
 -Rfitts fitts.ny004_REML -Rerrts errts.ny004_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (754x36):  4.41631  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (754x12):  1.0744  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (754x24):  4.2732  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (754x6):  3.28547  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (754x18):  1.00748  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 7.42926e-16  ++ VERY GOOD ++
++ Matrix setup time = 1.37 s
++ Voxels in dataset: 172800
++ Voxels per job:    10800
++ Job #1: processing voxels 10800 to 21599; elapsed time=6.101
++ Job #2: processing voxels 21600 to 32399; elapsed time=6.114
++ Job #3: processing voxels 32400 to 43199; elapsed time=6.128
++ Job #4: processing voxels 43200 to 53999; elapsed time=6.141
++ Job #5: processing voxels 54000 to 64799; elapsed time=6.156
++ Job #6: processing voxels 64800 to 75599; elapsed time=6.168
++ Job #7: processing voxels 75600 to 86399; elapsed time=6.183
++ Job #8: processing voxels 86400 to 97199; elapsed time=6.196
++ Job #9: processing voxels 97200 to 107999; elapsed time=6.211
++ Job #10: processing voxels 108000 to 118799; elapsed time=6.225
++ Job #11: processing voxels 118800 to 129599; elapsed time=6.241
++ Job #12: processing voxels 129600 to 140399; elapsed time=6.255
++ Job #13: processing voxels 140400 to 151199; elapsed time=6.267
++ Job #14: processing voxels 151200 to 161999; elapsed time=6.281
++ Job #15: processing voxels 162000 to 172799; elapsed time=6.296
++ Job #0: processing voxels 0 to 10799; elapsed time=6.306
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #2 finished; elapsed time=85.586
++ Job #5 finished; elapsed time=86.108
++ Job #13 finished; elapsed time=86.306
++ Job #3 finished; elapsed time=86.411
++ Job #4 finished; elapsed time=86.635
++ Job #15 finished; elapsed time=86.870
++ Job #6 finished; elapsed time=86.896
++ Job #8 finished; elapsed time=86.864
++ Job #1 finished; elapsed time=86.951
++ Job #7 finished; elapsed time=86.960
++ Job #11 finished; elapsed time=87.161
++ Job #14 finished; elapsed time=87.207
++ Job #9 finished; elapsed time=87.214
9.
++ Job #0 waiting for children to finish; elapsed time=87.268
++ Job #12 finished; elapsed time=87.462
++ Job #10 finished; elapsed time=87.484
++ Job #0 now finishing up; elapsed time=88.061
++ Wrote bucket dataset into ./stats.ny004+tlrc.BRIK
 + created 59 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.ny004+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.ny004+tlrc.BRIK
++ Program finished; elapsed time=477.357
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
-- no warnings for correlation matrix (cut = 0.400) --
tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb01.ny004.r01.scale+tlrc.HEAD pb01.ny004.r02.scale+tlrc.HEAD pb01.ny004.r03.scale+tlrc.HEAD pb01.ny004.r04.scale+tlrc.HEAD pb01.ny004.r05.scale+tlrc.HEAD pb01.ny004.r06.scale+tlrc.HEAD -fout -tout -Rbuck stats.ny004_REML -Rvar stats.ny004_REMLvar -Rfitts fitts.ny004_REML -Rerrts errts.ny004_REML -verb
++ 3dREMLfit: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 12
++ No mask ==> computing for all 172800 voxels
++ FDR automask has 58799 voxels (out of 172800 = 34.0%)
++ -----  matrix condition (754x36):  4.41631  ++ VERY GOOD ++
 + masked off 113987 voxels for being all zero; 58813 left in mask
++ Converting dataset to vector image
 +  dataset = 523 million [mega] bytes
 +  vectim  = 178 million [mega] bytes
++ starting REML setup calculations; total CPU=4.27 Elapsed=18.07
 + X matrix: 29.351% of elements are nonzero
 + starting 12 OpenMP threads for REML setup
 + REML setup finished: matrix rows=754 cols=36; 109*1 cases; total CPU=4.48 Elapsed=18.10
 +  average case bandwidth = 12.34
++ REML voxel loop: start 12 OpenMP threads 0123456789.01234567
 + ARMA voxel parameters estimated: total CPU=176.40 Elapsed=45.02
++ GLSQ voxel loop: 0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=211.59 Elapsed=81.05
++ Output dataset ./stats.ny004_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.ny004_REML+tlrc.BRIK
++ Output dataset ./errts.ny004_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.ny004_REML+tlrc
 + Added 59 FDR curves to dataset stats.ny004_REML+tlrc
++ Output dataset ./stats.ny004_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=253.70 Elapsed=609.58
if ( 0 != 0 ) then
3dTcat -prefix all_runs.ny004 pb01.ny004.r01.scale+tlrc.HEAD pb01.ny004.r02.scale+tlrc.HEAD pb01.ny004.r03.scale+tlrc.HEAD pb01.ny004.r04.scale+tlrc.HEAD pb01.ny004.r05.scale+tlrc.HEAD pb01.ny004.r06.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTstat -mean -prefix rm.signal.all all_runs.ny004+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.ny004_REML+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -c full_mask.ny004+tlrc -expr c*a/b -prefix TSNR.ny004
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.ny004+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.ny004_REML+tlrc
++ 3dTnorm: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.ny004+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
+++ 61277 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0680129
1dcat X.nocensor.xmat.1D[18]
1dcat X.nocensor.xmat.1D[19]
1dcat X.nocensor.xmat.1D[20]
1dcat X.nocensor.xmat.1D[21]
1dcat X.nocensor.xmat.1D[22]
1dcat X.nocensor.xmat.1D[23]
1dcat X.nocensor.xmat.1D[24]
1dcat X.nocensor.xmat.1D[25]
1dcat X.nocensor.xmat.1D[26]
1dcat X.nocensor.xmat.1D[27]
1dcat X.nocensor.xmat.1D[28]
1dcat X.nocensor.xmat.1D[29]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[18..29]
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[18..29]
gen_epi_review.py -script @epi_review.ny004 -dsets pb00.ny004.r01.tcat+tlrc.HEAD pb00.ny004.r02.tcat+tlrc.HEAD pb00.ny004.r03.tcat+tlrc.HEAD pb00.ny004.r04.tcat+tlrc.HEAD pb00.ny004.r05.tcat+tlrc.HEAD pb00.ny004.r06.tcat+tlrc.HEAD
gen_ss_review_scripts.py -mot_limit 0.5 -out_limit 0.1 -motion_dset dfile_rall.1D -exit0
** guess tcat: failed to determine subject ID from pb00 files
** guess rm_trs: no pb00 dset to detect removed TRs
** failed to find volreg dset, continuing...
** warning: failed to test sid/view with dset check on pb*r*1*volreg+tlrc.HEAD
** failed to guess align_anat (continuing)
** warning: basic script, missing variable rm_trs
++ writing ss review basic:          @ss_review_basic
** no volreg_dset, skipping align check...
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -f rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.BRIK rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.BRIK rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.BRIK rm.mask_r06+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.mean_r02+tlrc.BRIK rm.mean_r02+tlrc.HEAD rm.mean_r03+tlrc.BRIK rm.mean_r03+tlrc.HEAD rm.mean_r04+tlrc.BRIK rm.mean_r04+tlrc.HEAD rm.mean_r05+tlrc.BRIK rm.mean_r05+tlrc.HEAD rm.mean_r06+tlrc.BRIK rm.mean_r06+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD
tee out.ss_review.ny004.txt
if ( -e @ss_review_basic ) ./@ss_review_basic
./@ss_review_basic

subject ID                : ny004
TRs removed (per run)     : UNKNOWN
num stim classes provided : 12
final anatomy dset        : anat_final.ny004+tlrc.HEAD
final stats dset          : stats.ny004+tlrc.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.5
num TRs above mot limit   : 1
average motion (per TR)   : 0.0378051
average censored motion   : 0.0370502
max motion displacement   : 3.60588
max censored displacement : 3.60588
outlier limit             : 0.1
average outlier frac (TR) : 0.00254273
num TRs above out limit   : 0

num runs found            : 6
num TRs per run           : 126 126 126 126 126 126
num TRs per run (applied) : 124 126 126 126 126 126
num TRs per run (censored): 2 0 0 0 0 0
fraction censored per run : 0.015873 0 0 0 0 0
TRs total (uncensored)    : 756
TRs total                 : 754
degrees of freedom used   : 36
degrees of freedom left   : 718

TRs censored              : 2
censor fraction           : 0.002646
num regs of interest      : 12
num TRs per stim (orig)   : 115 121 62 109 124 62 112 118 66 116 118 62
num TRs censored per stim : 0 0 0 0 0 0 2 2 0 0 0 0
fraction TRs censored     : 0.000 0.000 0.000 0.000 0.000 0.000 0.018 0.017 0.000 0.000 0.000 0.000
ave mot per sresp (orig)  : 0.032909 0.029165 0.037199 0.049680 0.045062 0.044643 0.044531 0.046569 0.030500 0.033157 0.030077 0.039665
ave mot per sresp (cens)  : 0.032909 0.029165 0.037199 0.049680 0.045062 0.044643 0.037458 0.039897 0.030500 0.033157 0.030077 0.039665

TSNR average              : 229.296
global correlation (GCOR) : 0.0680129
maximum F-stat (masked)   : 97.91


cd ..
echo execution finished: `date`
date
execution finished: Wed Oct  8 11:49:07 EDT 2014
