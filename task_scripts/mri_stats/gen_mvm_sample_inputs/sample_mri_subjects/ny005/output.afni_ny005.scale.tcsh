echo auto-generated by afni_proc.py, Wed Oct  8 10:50:13 2014
auto-generated by afni_proc.py, Wed Oct  8 10:50:13 2014
echo (version 4.20, Jul 11, 2014)
(version 4.20, Jul 11, 2014)
echo execution started: `date`
date
execution started: Wed Oct  8 10:50:13 EDT 2014
afni -ver
Version AFNI_2011_12_21_1014
[[Precompiled binary macosx_10.7_Intel_64: Jul 18 2014]]
afni_history -check_date 13 May 2014
-- is current: afni_history as new as: 13 May 2014
               most recent entry is:   18 Jul 2014
if ( 0 ) then
if ( 0 > 0 ) then
set subj = ny005
endif
set output_dir = ny005.scale
if ( -d ny005.scale ) then
set runs = ( `count -digits 2 1 10` )
count -digits 2 1 10
mkdir ny005.scale
mkdir ny005.scale/stimuli
cp stim_times/bilingual/bil-afni_cond01.txt stim_times/bilingual/bil-afni_cond02.txt stim_times/bilingual/bil-afni_cond03.txt stim_times/bilingual/bil-afni_cond04.txt stim_times/bilingual/bil-afni_cond05.txt stim_times/bilingual/bil-afni_cond06.txt stim_times/bilingual/bil-afni_cond07.txt stim_times/bilingual/bil-afni_cond08.txt stim_times/bilingual/bil-afni_cond09.txt stim_times/bilingual/bil-afni_cond10.txt stim_times/bilingual/bil-afni_cond11.txt stim_times/bilingual/bil-afni_cond12.txt ny005.scale/stimuli
cp ny005.results/dfile_rall.1D ny005.scale
cp -rv ny005.results/anat_final.ny005+tlrc.BRIK ny005.results/anat_final.ny005+tlrc.HEAD ny005.scale
ny005.results/anat_final.ny005+tlrc.BRIK -> ny005.scale/anat_final.ny005+tlrc.BRIK
ny005.results/anat_final.ny005+tlrc.HEAD -> ny005.scale/anat_final.ny005+tlrc.HEAD
3dTcat -prefix ny005.scale/pb00.ny005.r01.tcat ny005.results/pb03.ny005.r01.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny005.scale/pb00.ny005.r02.tcat ny005.results/pb03.ny005.r02.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny005.scale/pb00.ny005.r03.tcat ny005.results/pb03.ny005.r03.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny005.scale/pb00.ny005.r04.tcat ny005.results/pb03.ny005.r04.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny005.scale/pb00.ny005.r05.tcat ny005.results/pb03.ny005.r05.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny005.scale/pb00.ny005.r06.tcat ny005.results/pb03.ny005.r06.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny005.scale/pb00.ny005.r07.tcat ny005.results/pb03.ny005.r07.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny005.scale/pb00.ny005.r08.tcat ny005.results/pb03.ny005.r08.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny005.scale/pb00.ny005.r09.tcat ny005.results/pb03.ny005.r09.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny005.scale/pb00.ny005.r10.tcat ny005.results/pb03.ny005.r10.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
set tr_counts = ( 126 126 126 126 126 126 126 126 126 126 )
cd ny005.scale
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 07 08 09 10 )
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r01.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50445 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r02.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50510 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r03.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 49982 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r04.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50001 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r05.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 49951 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r06.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50070 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r07.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 49876 voxels passed mask/clip
1deval -a outcount.r07.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r07.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r08.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 49704 voxels passed mask/clip
1deval -a outcount.r08.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r08.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r09.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 49762 voxels passed mask/clip
1deval -a outcount.r09.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r09.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny005.r10.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 49696 voxels passed mask/clip
1deval -a outcount.r10.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r10.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D outcount.r07.1D outcount.r08.1D outcount.r09.1D outcount.r10.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D rm.out.cen.r07.1D rm.out.cen.r08.1D rm.out.cen.r09.1D rm.out.cen.r10.1D
foreach run ( 01 02 03 04 05 06 07 08 09 10 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb00.ny005.r01.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r01.tcat+tlrc
++ Forming automask
 + Fixed clip level = 185.266220
 + Used gradual clip level = 180.170731 .. 194.562073
 + Number voxels above clip level = 50494
 + Clustering voxels ...
 + Largest cluster has 50494 voxels
 + Clustering voxels ...
 + Largest cluster has 50374 voxels
 + Filled    71 voxels in small holes; now have 50445 voxels
 + Clustering voxels ...
 + Largest cluster has 50445 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122355 voxels
 + Mask now has 50445 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 114599 voxels
++ 58201 voxels in the mask [out of 172800: 33.68%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   4 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r01+tlrc.BRIK
++ CPU time = 0.340000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb00.ny005.r02.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r02.tcat+tlrc
++ Forming automask
 + Fixed clip level = 184.670837
 + Used gradual clip level = 179.554291 .. 193.885483
 + Number voxels above clip level = 50559
 + Clustering voxels ...
 + Largest cluster has 50559 voxels
 + Clustering voxels ...
 + Largest cluster has 50442 voxels
 + Filled    68 voxels in small holes; now have 50510 voxels
 + Clustering voxels ...
 + Largest cluster has 50510 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122290 voxels
 + Mask now has 50510 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 114396 voxels
++ 58404 voxels in the mask [out of 172800: 33.80%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   4 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r02+tlrc.BRIK
++ CPU time = 0.330000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb00.ny005.r03.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r03.tcat+tlrc
++ Forming automask
 + Fixed clip level = 186.612457
 + Used gradual clip level = 181.306122 .. 196.555649
 + Number voxels above clip level = 50025
 + Clustering voxels ...
 + Largest cluster has 50025 voxels
 + Clustering voxels ...
 + Largest cluster has 49893 voxels
 + Filled    89 voxels in small holes; now have 49982 voxels
 + Filled     1 voxels in large holes; now have 49983 voxels
 + Clustering voxels ...
 + Largest cluster has 49982 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122818 voxels
 + Mask now has 49982 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 115063 voxels
++ 57737 voxels in the mask [out of 172800: 33.41%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   5 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r03+tlrc.BRIK
++ CPU time = 0.340000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r04 pb00.ny005.r04.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r04.tcat+tlrc
++ Forming automask
 + Fixed clip level = 186.659973
 + Used gradual clip level = 181.716370 .. 196.732956
 + Number voxels above clip level = 50031
 + Clustering voxels ...
 + Largest cluster has 50031 voxels
 + Clustering voxels ...
 + Largest cluster has 49912 voxels
 + Filled    89 voxels in small holes; now have 50001 voxels
 + Clustering voxels ...
 + Largest cluster has 50001 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122799 voxels
 + Mask now has 50001 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 115074 voxels
++ 57726 voxels in the mask [out of 172800: 33.41%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   5 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r04+tlrc.BRIK
++ CPU time = 0.330000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r05 pb00.ny005.r05.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r05.tcat+tlrc
++ Forming automask
 + Fixed clip level = 186.434799
 + Used gradual clip level = 181.551849 .. 196.380844
 + Number voxels above clip level = 49996
 + Clustering voxels ...
 + Largest cluster has 49996 voxels
 + Clustering voxels ...
 + Largest cluster has 49870 voxels
 + Filled    81 voxels in small holes; now have 49951 voxels
 + Clustering voxels ...
 + Largest cluster has 49951 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122849 voxels
 + Mask now has 49951 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 115137 voxels
++ 57663 voxels in the mask [out of 172800: 33.37%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   5 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r05+tlrc.BRIK
++ CPU time = 0.340000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r06 pb00.ny005.r06.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r06.tcat+tlrc
++ Forming automask
 + Fixed clip level = 186.143387
 + Used gradual clip level = 180.962662 .. 196.436035
 + Number voxels above clip level = 50090
 + Clustering voxels ...
 + Largest cluster has 50090 voxels
 + Clustering voxels ...
 + Largest cluster has 49980 voxels
 + Filled    89 voxels in small holes; now have 50069 voxels
 + Filled     1 voxels in large holes; now have 50070 voxels
 + Clustering voxels ...
 + Largest cluster has 50070 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122730 voxels
 + Mask now has 50070 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 115016 voxels
++ 57784 voxels in the mask [out of 172800: 33.44%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   5 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r06+tlrc.BRIK
++ CPU time = 0.350000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r07 pb00.ny005.r07.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r07.tcat+tlrc
++ Forming automask
 + Fixed clip level = 186.653702
 + Used gradual clip level = 181.348312 .. 196.783844
 + Number voxels above clip level = 49914
 + Clustering voxels ...
 + Largest cluster has 49914 voxels
 + Clustering voxels ...
 + Largest cluster has 49793 voxels
 + Filled    83 voxels in small holes; now have 49876 voxels
 + Clustering voxels ...
 + Largest cluster has 49876 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122924 voxels
 + Mask now has 49876 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 115232 voxels
++ 57568 voxels in the mask [out of 172800: 33.31%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   5 y-planes are zero [from A]
++ last    3 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r07+tlrc.BRIK
++ CPU time = 0.330000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r08 pb00.ny005.r08.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r08.tcat+tlrc
++ Forming automask
 + Fixed clip level = 186.768250
 + Used gradual clip level = 181.338120 .. 196.669922
 + Number voxels above clip level = 49716
 + Clustering voxels ...
 + Largest cluster has 49716 voxels
 + Clustering voxels ...
 + Largest cluster has 49610 voxels
 + Filled    95 voxels in small holes; now have 49705 voxels
 + Clustering voxels ...
 + Largest cluster has 49704 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 123096 voxels
 + Mask now has 49704 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 115410 voxels
++ 57390 voxels in the mask [out of 172800: 33.21%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   5 y-planes are zero [from A]
++ last    3 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r08+tlrc.BRIK
++ CPU time = 0.330000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r09 pb00.ny005.r09.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r09.tcat+tlrc
++ Forming automask
 + Fixed clip level = 186.435989
 + Used gradual clip level = 181.214752 .. 196.065811
 + Number voxels above clip level = 49794
 + Clustering voxels ...
 + Largest cluster has 49794 voxels
 + Clustering voxels ...
 + Largest cluster has 49675 voxels
 + Filled    87 voxels in small holes; now have 49762 voxels
 + Clustering voxels ...
 + Largest cluster has 49762 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 123038 voxels
 + Mask now has 49762 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 115327 voxels
++ 57473 voxels in the mask [out of 172800: 33.26%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   5 y-planes are zero [from A]
++ last    3 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r09+tlrc.BRIK
++ CPU time = 0.320000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r10 pb00.ny005.r10.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny005.r10.tcat+tlrc
++ Forming automask
 + Fixed clip level = 186.485626
 + Used gradual clip level = 181.247650 .. 196.148560
 + Number voxels above clip level = 49721
 + Clustering voxels ...
 + Largest cluster has 49721 voxels
 + Clustering voxels ...
 + Largest cluster has 49614 voxels
 + Filled    82 voxels in small holes; now have 49696 voxels
 + Clustering voxels ...
 + Largest cluster has 49696 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 123104 voxels
 + Mask now has 49696 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 115399 voxels
++ 57401 voxels in the mask [out of 172800: 33.22%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   5 y-planes are zero [from A]
++ last    3 y-planes are zero [from P]
++ first   4 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r10+tlrc.BRIK
++ CPU time = 0.320000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.HEAD rm.mask_r07+tlrc.HEAD rm.mask_r08+tlrc.HEAD rm.mask_r09+tlrc.HEAD rm.mask_r10+tlrc.HEAD -union -prefix full_mask.ny005
++ processing 10 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 10 volumes gives min count 0
++ voxel limits: 0 clipped, 58889 survived, 113911 were zero
++ writing result full_mask.ny005...
++ Output dataset ./full_mask.ny005+tlrc.BRIK
foreach run ( 01 02 03 04 05 06 07 08 09 10 )
3dTstat -prefix rm.mean_r01 pb00.ny005.r01.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb00.ny005.r01.tcat+tlrc -b rm.mean_r01+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r01.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb00.ny005.r02.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb00.ny005.r02.tcat+tlrc -b rm.mean_r02+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r02.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb00.ny005.r03.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb00.ny005.r03.tcat+tlrc -b rm.mean_r03+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r03.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r03.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r04 pb00.ny005.r04.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r04+tlrc.BRIK
3dcalc -a pb00.ny005.r04.tcat+tlrc -b rm.mean_r04+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r04.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r04.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r05 pb00.ny005.r05.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r05+tlrc.BRIK
3dcalc -a pb00.ny005.r05.tcat+tlrc -b rm.mean_r05+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r05.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r05.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r06 pb00.ny005.r06.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r06+tlrc.BRIK
3dcalc -a pb00.ny005.r06.tcat+tlrc -b rm.mean_r06+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r06.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r06.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r07 pb00.ny005.r07.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r07+tlrc.BRIK
3dcalc -a pb00.ny005.r07.tcat+tlrc -b rm.mean_r07+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r07.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r07.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r08 pb00.ny005.r08.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r08+tlrc.BRIK
3dcalc -a pb00.ny005.r08.tcat+tlrc -b rm.mean_r08+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r08.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r08.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r09 pb00.ny005.r09.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r09+tlrc.BRIK
3dcalc -a pb00.ny005.r09.tcat+tlrc -b rm.mean_r09+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r09.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r09.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r10 pb00.ny005.r10.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r10+tlrc.BRIK
3dcalc -a pb00.ny005.r10.tcat+tlrc -b rm.mean_r10+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny005.r10.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny005.r10.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 10 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 10 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 10 -show_censor_count -censor_prev_TR -censor_motion 0.5 motion_ny005
total number of censored TRs = 4
1deval -a motion_ny005_censor.1D -b outcount_ny005_censor.1D -expr a*b
3dDeconvolve -input pb01.ny005.r01.scale+tlrc.HEAD pb01.ny005.r02.scale+tlrc.HEAD pb01.ny005.r03.scale+tlrc.HEAD pb01.ny005.r04.scale+tlrc.HEAD pb01.ny005.r05.scale+tlrc.HEAD pb01.ny005.r06.scale+tlrc.HEAD pb01.ny005.r07.scale+tlrc.HEAD pb01.ny005.r08.scale+tlrc.HEAD pb01.ny005.r09.scale+tlrc.HEAD pb01.ny005.r10.scale+tlrc.HEAD -censor censor_ny005_combined_2.1D -polort 2 -float -local_times -num_stimts 18 -stim_times 1 stimuli/bil-afni_cond01.txt GAM -stim_label 1 english_speech_wrd -stim_times 2 stimuli/bil-afni_cond02.txt GAM -stim_label 2 english_speech_psd -stim_times 3 stimuli/bil-afni_cond03.txt GAM -stim_label 3 english_speech_cat -stim_times 4 stimuli/bil-afni_cond04.txt GAM -stim_label 4 english_print_psd -stim_times 5 stimuli/bil-afni_cond05.txt GAM -stim_label 5 english_print_wrd -stim_times 6 stimuli/bil-afni_cond06.txt GAM -stim_label 6 english_print_cat -stim_times 7 stimuli/bil-afni_cond07.txt GAM -stim_label 7 hebrew_speech_wrd -stim_times 8 stimuli/bil-afni_cond08.txt GAM -stim_label 8 hebrew_speech_psd -stim_times 9 stimuli/bil-afni_cond09.txt GAM -stim_label 9 hebrew_speech_cat -stim_times 10 stimuli/bil-afni_cond10.txt GAM -stim_label 10 hebrew_print_psd -stim_times 11 stimuli/bil-afni_cond11.txt GAM -stim_label 11 hebrew_print_wrd -stim_times 12 stimuli/bil-afni_cond12.txt GAM -stim_label 12 hebrew_print_cat -stim_file 13 motion_demean.1D[0] -stim_base 13 -stim_label 13 roll -stim_file 14 motion_demean.1D[1] -stim_base 14 -stim_label 14 pitch -stim_file 15 motion_demean.1D[2] -stim_base 15 -stim_label 15 yaw -stim_file 16 motion_demean.1D[3] -stim_base 16 -stim_label 16 dS -stim_file 17 motion_demean.1D[4] -stim_base 17 -stim_label 17 dL -stim_file 18 motion_demean.1D[5] -stim_base 18 -stim_label 18 dP -num_glt 17 -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat -glt_label 1 English_print_and_speech -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat -glt_label 2 Hebrew_print_and_speech -gltsym SYM: +english_speech_wrd +english_speech_psd                     
    +english_speech_cat -glt_label 3 English_speech -gltsym SYM: +english_print_psd +english_print_wrd +english_print_cat -glt_label 4 English_print -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat -glt_label 5 Hebrew_speech -gltsym SYM: +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat -glt_label 6 Hebrew_print -gltsym SYM: +english_speech_wrd -english_speech_psd -glt_label 7 English_speech_lexicality -gltsym SYM: +english_print_psd -english_print_wrd -glt_label 8 English_print_lexicality -gltsym SYM: +hebrew_speech_wrd -hebrew_speech_psd -glt_label 9 Hebrew_speech_lexicality -gltsym SYM: +hebrew_print_psd -hebrew_print_wrd -glt_label 10 Hebrew_print_lexicality -gltsym SYM: +english_speech_wrd -english_speech_psd -english_print_psd  
    +english_print_wrd -glt_label 11 LexicalityXmodality_English -gltsym SYM: +hebrew_speech_wrd -hebrew_speech_psd -hebrew_print_psd     
    +hebrew_print_wrd -glt_label 12 LexicalityXmodality_Hebrew -gltsym SYM: +english_print_psd +english_print_wrd +english_print_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 13 English_print-Hebrew_print -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat -glt_label 14 English_speech-Hebrew_speech -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat                  
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat                  
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 15 English-Hebrew -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -english_print_psd -english_print_wrd -english_print_cat -glt_label 16 English-speech-English_print -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 17 Hebrew_speech-Hebrew_print -jobs 16 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.ny005 -errts errts.ny005 -bucket stats.ny005
++ 3dDeconvolve: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ loading dataset pb01.ny005.r01.scale+tlrc.HEAD pb01.ny005.r02.scale+tlrc.HEAD pb01.ny005.r03.scale+tlrc.HEAD pb01.ny005.r04.scale+tlrc.HEAD pb01.ny005.r05.scale+tlrc.HEAD pb01.ny005.r06.scale+tlrc.HEAD pb01.ny005.r07.scale+tlrc.HEAD pb01.ny005.r08.scale+tlrc.HEAD pb01.ny005.r09.scale+tlrc.HEAD pb01.ny005.r10.scale+tlrc.HEAD
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 126 252 378 504 630 756 882 1008 1134
++ STAT automask has 56941 voxels (out of 172800 = 33.0%)
++ Skipping check for initial transients
++ Input polort=2; Longest run=252.0 s; Recommended minimum polort=2 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times 1 using LOCAL times
++ -stim_times 2 using LOCAL times
++ -stim_times 3 using LOCAL times
++ -stim_times 4 using LOCAL times
++ -stim_times 5 using LOCAL times
++ -stim_times 6 using LOCAL times
++ -stim_times 7 using LOCAL times
++ -stim_times 8 using LOCAL times
++ -stim_times 9 using LOCAL times
++ -stim_times 10 using LOCAL times
++ -stim_times 11 using LOCAL times
++ -stim_times 12 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd                     
    +english_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd +english_print_wrd +english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd -english_speech_psd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd -english_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd -hebrew_speech_psd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_print_psd -hebrew_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd -english_speech_psd -english_print_psd  
    +english_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0  -1   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd -hebrew_speech_psd -hebrew_print_psd     
    +hebrew_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0  -1   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd +english_print_wrd +english_print_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0  -1  -1  -1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat                  
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat                  
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -english_print_psd -english_print_wrd -english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
++ Number of time points: 1260 (before censor) ; 1256 (after)
 + Number of parameters:  48 [36 baseline ; 12 signal]
++ total shared memory needed = 1,802,649,600 bytes (about 1.8 billion [giga])
++ mmap() memory allocated: 1,802,649,600 bytes (about 1.8 billion [giga])
++ Memory required for output bricks = 1,802,649,600 bytes (about 1.8 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb01.ny005.r01.scale+tlrc.HEAD pb01.ny005.r02.scale+tlrc.HEAD pb01.ny005.r03.scale+tlrc.HEAD pb01.ny005.r04.scale+tlrc.HEAD pb01.ny005.r05.scale+tlrc.HEAD pb01.ny005.r06.scale+tlrc.HEAD pb01.ny005.r07.scale+tlrc.HEAD pb01.ny005.r08.scale+tlrc.HEAD pb01.ny005.r09.scale+tlrc.HEAD pb01.ny005.r10.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.ny005_REML -Rvar stats.ny005_REMLvar \
 -Rfitts fitts.ny005_REML -Rerrts errts.ny005_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (1256x48):  3.51026  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (1256x12):  1.07113  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (1256x36):  3.4455  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (1256x6):  2.02761  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (1256x30):  1.00928  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.78139e-16  ++ VERY GOOD ++
++ Matrix setup time = 4.48 s
++ Voxels in dataset: 172800
++ Voxels per job:    10800
++ Job #1: processing voxels 10800 to 21599; elapsed time=539.581
++ Job #2: processing voxels 21600 to 32399; elapsed time=539.593
++ Job #3: processing voxels 32400 to 43199; elapsed time=539.604
++ Job #4: processing voxels 43200 to 53999; elapsed time=539.615
++ Job #5: processing voxels 54000 to 64799; elapsed time=539.628
++ Job #6: processing voxels 64800 to 75599; elapsed time=539.640
++ Job #7: processing voxels 75600 to 86399; elapsed time=539.652
++ Job #8: processing voxels 86400 to 97199; elapsed time=539.664
++ Job #9: processing voxels 97200 to 107999; elapsed time=539.678
++ Job #10: processing voxels 108000 to 118799; elapsed time=539.691
++ Job #11: processing voxels 118800 to 129599; elapsed time=539.715
++ Job #12: processing voxels 129600 to 140399; elapsed time=539.740
++ Job #13: processing voxels 140400 to 151199; elapsed time=539.762
++ Job #14: processing voxels 151200 to 161999; elapsed time=539.775
++ Job #15: processing voxels 162000 to 172799; elapsed time=539.788
++ Job #0: processing voxels 0 to 10799; elapsed time=539.798
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #4 finished; elapsed time=883.609
++ Job #5 finished; elapsed time=883.942
++ Job #1 finished; elapsed time=884.380
++ Job #3 finished; elapsed time=884.403
++ Job #2 finished; elapsed time=884.805
++ Job #14 finished; elapsed time=885.887
++ Job #7 finished; elapsed time=885.903
9.
++ Job #0 waiting for children to finish; elapsed time=886.218
++ Job #15 finished; elapsed time=886.647
++ Job #10 finished; elapsed time=886.719
++ Job #9 finished; elapsed time=886.955
++ Job #11 finished; elapsed time=887.382
++ Job #6 finished; elapsed time=887.494
++ Job #8 finished; elapsed time=887.653
++ Job #12 finished; elapsed time=888.259
++ Job #13 finished; elapsed time=888.626
++ Job #0 now finishing up; elapsed time=889.979
++ Wrote bucket dataset into ./stats.ny005+tlrc.BRIK
 + created 59 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.ny005+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.ny005+tlrc.BRIK
++ Program finished; elapsed time=1278.101
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
-- no warnings for correlation matrix (cut = 0.400) --
tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb01.ny005.r01.scale+tlrc.HEAD pb01.ny005.r02.scale+tlrc.HEAD pb01.ny005.r03.scale+tlrc.HEAD pb01.ny005.r04.scale+tlrc.HEAD pb01.ny005.r05.scale+tlrc.HEAD pb01.ny005.r06.scale+tlrc.HEAD pb01.ny005.r07.scale+tlrc.HEAD pb01.ny005.r08.scale+tlrc.HEAD pb01.ny005.r09.scale+tlrc.HEAD pb01.ny005.r10.scale+tlrc.HEAD -fout -tout -Rbuck stats.ny005_REML -Rvar stats.ny005_REMLvar -Rfitts fitts.ny005_REML -Rerrts errts.ny005_REML -verb
++ 3dREMLfit: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 12
++ No mask ==> computing for all 172800 voxels
++ FDR automask has 56941 voxels (out of 172800 = 33.0%)
++ -----  matrix condition (1256x48):  3.51026  ++ VERY GOOD ++
 + masked off 115841 voxels for being all zero; 56959 left in mask
++ Converting dataset to vector image
 +  dataset = 871 million [mega] bytes
 +  vectim  = 287 million [mega] bytes
++ starting REML setup calculations; total CPU=11.54 Elapsed=525.13
 + X matrix: 21.998% of elements are nonzero
 + starting 12 OpenMP threads for REML setup
 + REML setup finished: matrix rows=1256 cols=48; 109*1 cases; total CPU=12.07 Elapsed=525.20
 +  average case bandwidth = 12.33
++ REML voxel loop: start 12 OpenMP threads 0123456789.0123456
 + ARMA voxel parameters estimated: total CPU=287.78 Elapsed=570.41
++ GLSQ voxel loop: 0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=363.95 Elapsed=669.43
++ Output dataset ./stats.ny005_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.ny005_REML+tlrc.BRIK
++ Output dataset ./errts.ny005_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.ny005_REML+tlrc
 + Added 59 FDR curves to dataset stats.ny005_REML+tlrc
++ Output dataset ./stats.ny005_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=427.54 Elapsed=965.86
if ( 0 != 0 ) then
3dTcat -prefix all_runs.ny005 pb01.ny005.r01.scale+tlrc.HEAD pb01.ny005.r02.scale+tlrc.HEAD pb01.ny005.r03.scale+tlrc.HEAD pb01.ny005.r04.scale+tlrc.HEAD pb01.ny005.r05.scale+tlrc.HEAD pb01.ny005.r06.scale+tlrc.HEAD pb01.ny005.r07.scale+tlrc.HEAD pb01.ny005.r08.scale+tlrc.HEAD pb01.ny005.r09.scale+tlrc.HEAD pb01.ny005.r10.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTstat -mean -prefix rm.signal.all all_runs.ny005+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.ny005_REML+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -c full_mask.ny005+tlrc -expr c*a/b -prefix TSNR.ny005
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.ny005+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.ny005_REML+tlrc
++ 3dTnorm: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.ny005+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
+++ 58889 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0847438
1dcat X.nocensor.xmat.1D[30]
1dcat X.nocensor.xmat.1D[31]
1dcat X.nocensor.xmat.1D[32]
1dcat X.nocensor.xmat.1D[33]
1dcat X.nocensor.xmat.1D[34]
1dcat X.nocensor.xmat.1D[35]
1dcat X.nocensor.xmat.1D[36]
1dcat X.nocensor.xmat.1D[37]
1dcat X.nocensor.xmat.1D[38]
1dcat X.nocensor.xmat.1D[39]
1dcat X.nocensor.xmat.1D[40]
1dcat X.nocensor.xmat.1D[41]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[30..41]
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[30..41]
gen_epi_review.py -script @epi_review.ny005 -dsets pb00.ny005.r01.tcat+tlrc.HEAD pb00.ny005.r02.tcat+tlrc.HEAD pb00.ny005.r03.tcat+tlrc.HEAD pb00.ny005.r04.tcat+tlrc.HEAD pb00.ny005.r05.tcat+tlrc.HEAD pb00.ny005.r06.tcat+tlrc.HEAD pb00.ny005.r07.tcat+tlrc.HEAD pb00.ny005.r08.tcat+tlrc.HEAD pb00.ny005.r09.tcat+tlrc.HEAD pb00.ny005.r10.tcat+tlrc.HEAD
gen_ss_review_scripts.py -mot_limit 0.5 -out_limit 0.1 -motion_dset dfile_rall.1D -exit0
** guess tcat: failed to determine subject ID from pb00 files
** guess rm_trs: no pb00 dset to detect removed TRs
** failed to find volreg dset, continuing...
** warning: failed to test sid/view with dset check on pb*r*1*volreg+tlrc.HEAD
** failed to guess align_anat (continuing)
** warning: basic script, missing variable rm_trs
++ writing ss review basic:          @ss_review_basic
** no volreg_dset, skipping align check...
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -f rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.BRIK rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.BRIK rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.BRIK rm.mask_r06+tlrc.HEAD rm.mask_r07+tlrc.BRIK rm.mask_r07+tlrc.HEAD rm.mask_r08+tlrc.BRIK rm.mask_r08+tlrc.HEAD rm.mask_r09+tlrc.BRIK rm.mask_r09+tlrc.HEAD rm.mask_r10+tlrc.BRIK rm.mask_r10+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.mean_r02+tlrc.BRIK rm.mean_r02+tlrc.HEAD rm.mean_r03+tlrc.BRIK rm.mean_r03+tlrc.HEAD rm.mean_r04+tlrc.BRIK rm.mean_r04+tlrc.HEAD rm.mean_r05+tlrc.BRIK rm.mean_r05+tlrc.HEAD rm.mean_r06+tlrc.BRIK rm.mean_r06+tlrc.HEAD rm.mean_r07+tlrc.BRIK rm.mean_r07+tlrc.HEAD rm.mean_r08+tlrc.BRIK rm.mean_r08+tlrc.HEAD rm.mean_r09+tlrc.BRIK rm.mean_r09+tlrc.HEAD rm.mean_r10+tlrc.BRIK rm.mean_r10+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D rm.out.cen.r07.1D rm.out.cen.r08.1D rm.out.cen.r09.1D rm.out.cen.r10.1D rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD
tee out.ss_review.ny005.txt
if ( -e @ss_review_basic ) ./@ss_review_basic
./@ss_review_basic

subject ID                : ny005
TRs removed (per run)     : UNKNOWN
num stim classes provided : 12
final anatomy dset        : anat_final.ny005+tlrc.HEAD
final stats dset          : stats.ny005+tlrc.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.5
num TRs above mot limit   : 2
average motion (per TR)   : 0.0628428
average censored motion   : 0.0622677
max motion displacement   : 4.64461
max censored displacement : 4.64461
outlier limit             : 0.1
average outlier frac (TR) : 0.00219998
num TRs above out limit   : 1

num runs found            : 10
num TRs per run           : 126 126 126 126 126 126 126 126 126 126
num TRs per run (applied) : 124 126 126 126 126 126 126 126 124 126
num TRs per run (censored): 2 0 0 0 0 0 0 0 2 0
fraction censored per run : 0.015873 0 0 0 0 0 0 0 0.015873 0
TRs total (uncensored)    : 1260
TRs total                 : 1256
degrees of freedom used   : 48
degrees of freedom left   : 1208

TRs censored              : 4
censor fraction           : 0.003175
num regs of interest      : 12
num TRs per stim (orig)   : 191 197 105 185 202 104 188 196 107 196 188 102
num TRs censored per stim : 0 0 0 0 0 0 0 0 0 1 2 0
fraction TRs censored     : 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.005 0.011 0.000
ave mot per sresp (orig)  : 0.059299 0.064249 0.062351 0.061222 0.057234 0.054111 0.055848 0.051956 0.050874 0.081399 0.076088 0.077313
ave mot per sresp (cens)  : 0.059299 0.064249 0.062351 0.061222 0.057234 0.054111 0.055848 0.051956 0.050874 0.078874 0.073334 0.077313

TSNR average              : 199.091
global correlation (GCOR) : 0.0847438
maximum F-stat (masked)   : 56.964


cd ..
echo execution finished: `date`
date
execution finished: Wed Oct  8 12:42:31 EDT 2014
