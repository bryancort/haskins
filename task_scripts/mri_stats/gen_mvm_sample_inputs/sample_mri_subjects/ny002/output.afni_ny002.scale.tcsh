echo auto-generated by afni_proc.py, Wed Oct  8 10:50:13 2014
auto-generated by afni_proc.py, Wed Oct  8 10:50:13 2014
echo (version 4.20, Jul 11, 2014)
(version 4.20, Jul 11, 2014)
echo execution started: `date`
date
execution started: Wed Oct  8 10:50:13 EDT 2014
afni -ver
Version AFNI_2011_12_21_1014
[[Precompiled binary macosx_10.7_Intel_64: Jul 18 2014]]
afni_history -check_date 13 May 2014
-- is current: afni_history as new as: 13 May 2014
               most recent entry is:   18 Jul 2014
if ( 0 ) then
if ( 0 > 0 ) then
set subj = ny002
endif
set output_dir = ny002.scale
if ( -d ny002.scale ) then
set runs = ( `count -digits 2 1 10` )
count -digits 2 1 10
mkdir ny002.scale
mkdir ny002.scale/stimuli
cp stim_times/bilingual/bil-afni_cond01.txt stim_times/bilingual/bil-afni_cond02.txt stim_times/bilingual/bil-afni_cond03.txt stim_times/bilingual/bil-afni_cond04.txt stim_times/bilingual/bil-afni_cond05.txt stim_times/bilingual/bil-afni_cond06.txt stim_times/bilingual/bil-afni_cond07.txt stim_times/bilingual/bil-afni_cond08.txt stim_times/bilingual/bil-afni_cond09.txt stim_times/bilingual/bil-afni_cond10.txt stim_times/bilingual/bil-afni_cond11.txt stim_times/bilingual/bil-afni_cond12.txt ny002.scale/stimuli
cp ny002.results/dfile_rall.1D ny002.scale
cp -rv ny002.results/anat_final.ny002+tlrc.BRIK ny002.results/anat_final.ny002+tlrc.HEAD ny002.scale
ny002.results/anat_final.ny002+tlrc.BRIK -> ny002.scale/anat_final.ny002+tlrc.BRIK
ny002.results/anat_final.ny002+tlrc.HEAD -> ny002.scale/anat_final.ny002+tlrc.HEAD
3dTcat -prefix ny002.scale/pb00.ny002.r01.tcat ny002.results/pb03.ny002.r01.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny002.scale/pb00.ny002.r02.tcat ny002.results/pb03.ny002.r02.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny002.scale/pb00.ny002.r03.tcat ny002.results/pb03.ny002.r03.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny002.scale/pb00.ny002.r04.tcat ny002.results/pb03.ny002.r04.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny002.scale/pb00.ny002.r05.tcat ny002.results/pb03.ny002.r05.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny002.scale/pb00.ny002.r06.tcat ny002.results/pb03.ny002.r06.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny002.scale/pb00.ny002.r07.tcat ny002.results/pb03.ny002.r07.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny002.scale/pb00.ny002.r08.tcat ny002.results/pb03.ny002.r08.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny002.scale/pb00.ny002.r09.tcat ny002.results/pb03.ny002.r09.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny002.scale/pb00.ny002.r10.tcat ny002.results/pb03.ny002.r10.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
set tr_counts = ( 126 126 126 126 126 126 126 126 126 126 )
cd ny002.scale
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 07 08 09 10 )
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r01.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53728 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r02.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53477 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r03.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53620 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r04.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53610 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r05.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53766 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r06.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53823 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r07.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53938 voxels passed mask/clip
1deval -a outcount.r07.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r07.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r08.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53951 voxels passed mask/clip
1deval -a outcount.r08.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r08.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r09.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53890 voxels passed mask/clip
1deval -a outcount.r09.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r09.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny002.r10.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 53752 voxels passed mask/clip
1deval -a outcount.r10.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r10.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D outcount.r07.1D outcount.r08.1D outcount.r09.1D outcount.r10.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D rm.out.cen.r07.1D rm.out.cen.r08.1D rm.out.cen.r09.1D rm.out.cen.r10.1D
foreach run ( 01 02 03 04 05 06 07 08 09 10 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb00.ny002.r01.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r01.tcat+tlrc
++ Forming automask
 + Fixed clip level = 179.541138
 + Used gradual clip level = 175.115784 .. 187.974731
 + Number voxels above clip level = 53743
 + Clustering voxels ...
 + Largest cluster has 53743 voxels
 + Clustering voxels ...
 + Largest cluster has 53643 voxels
 + Filled    85 voxels in small holes; now have 53728 voxels
 + Clustering voxels ...
 + Largest cluster has 53728 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 119072 voxels
 + Mask now has 53728 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110596 voxels
++ 62204 voxels in the mask [out of 172800: 36.00%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r01+tlrc.BRIK
++ CPU time = 0.330000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb00.ny002.r02.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r02.tcat+tlrc
++ Forming automask
 + Fixed clip level = 179.139862
 + Used gradual clip level = 175.177353 .. 188.079025
 + Number voxels above clip level = 53480
 + Clustering voxels ...
 + Largest cluster has 53480 voxels
 + Clustering voxels ...
 + Largest cluster has 53389 voxels
 + Filled    88 voxels in small holes; now have 53477 voxels
 + Clustering voxels ...
 + Largest cluster has 53477 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 119323 voxels
 + Mask now has 53477 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110873 voxels
++ 61927 voxels in the mask [out of 172800: 35.84%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r02+tlrc.BRIK
++ CPU time = 0.330000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb00.ny002.r03.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r03.tcat+tlrc
++ Forming automask
 + Fixed clip level = 178.861282
 + Used gradual clip level = 174.370544 .. 187.688522
 + Number voxels above clip level = 53621
 + Clustering voxels ...
 + Largest cluster has 53621 voxels
 + Clustering voxels ...
 + Largest cluster has 53529 voxels
 + Filled    91 voxels in small holes; now have 53620 voxels
 + Clustering voxels ...
 + Largest cluster has 53620 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 119180 voxels
 + Mask now has 53620 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110771 voxels
++ 62029 voxels in the mask [out of 172800: 35.90%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r03+tlrc.BRIK
++ CPU time = 0.330000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r04 pb00.ny002.r04.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r04.tcat+tlrc
++ Forming automask
 + Fixed clip level = 178.225479
 + Used gradual clip level = 174.446014 .. 187.739639
 + Number voxels above clip level = 53623
 + Clustering voxels ...
 + Largest cluster has 53623 voxels
 + Clustering voxels ...
 + Largest cluster has 53522 voxels
 + Filled    87 voxels in small holes; now have 53609 voxels
 + Filled     1 voxels in large holes; now have 53610 voxels
 + Clustering voxels ...
 + Largest cluster has 53610 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 119190 voxels
 + Mask now has 53610 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110771 voxels
++ 62029 voxels in the mask [out of 172800: 35.90%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r04+tlrc.BRIK
++ CPU time = 0.330000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r05 pb00.ny002.r05.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r05.tcat+tlrc
++ Forming automask
 + Fixed clip level = 177.993881
 + Used gradual clip level = 174.332428 .. 187.496002
 + Number voxels above clip level = 53779
 + Clustering voxels ...
 + Largest cluster has 53779 voxels
 + Clustering voxels ...
 + Largest cluster has 53680 voxels
 + Filled    86 voxels in small holes; now have 53766 voxels
 + Clustering voxels ...
 + Largest cluster has 53766 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 119034 voxels
 + Mask now has 53766 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110593 voxels
++ 62207 voxels in the mask [out of 172800: 36.00%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r05+tlrc.BRIK
++ CPU time = 0.340000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r06 pb00.ny002.r06.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r06.tcat+tlrc
++ Forming automask
 + Fixed clip level = 177.277359
 + Used gradual clip level = 173.841980 .. 187.448044
 + Number voxels above clip level = 53811
 + Clustering voxels ...
 + Largest cluster has 53811 voxels
 + Clustering voxels ...
 + Largest cluster has 53709 voxels
 + Filled   111 voxels in small holes; now have 53820 voxels
 + Filled     3 voxels in large holes; now have 53823 voxels
 + Clustering voxels ...
 + Largest cluster has 53823 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 118977 voxels
 + Mask now has 53823 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110474 voxels
++ 62326 voxels in the mask [out of 172800: 36.07%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r06+tlrc.BRIK
++ CPU time = 0.340000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r07 pb00.ny002.r07.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r07.tcat+tlrc
++ Forming automask
 + Fixed clip level = 176.976837
 + Used gradual clip level = 173.557571 .. 187.332794
 + Number voxels above clip level = 53924
 + Clustering voxels ...
 + Largest cluster has 53924 voxels
 + Clustering voxels ...
 + Largest cluster has 53827 voxels
 + Filled   111 voxels in small holes; now have 53938 voxels
 + Clustering voxels ...
 + Largest cluster has 53938 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 118862 voxels
 + Mask now has 53938 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110357 voxels
++ 62443 voxels in the mask [out of 172800: 36.14%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r07+tlrc.BRIK
++ CPU time = 0.340000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r08 pb00.ny002.r08.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r08.tcat+tlrc
++ Forming automask
 + Fixed clip level = 176.581619
 + Used gradual clip level = 173.091400 .. 187.131332
 + Number voxels above clip level = 53926
 + Clustering voxels ...
 + Largest cluster has 53926 voxels
 + Clustering voxels ...
 + Largest cluster has 53833 voxels
 + Filled   114 voxels in small holes; now have 53947 voxels
 + Filled     4 voxels in large holes; now have 53951 voxels
 + Clustering voxels ...
 + Largest cluster has 53951 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 118849 voxels
 + Mask now has 53951 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110395 voxels
++ 62405 voxels in the mask [out of 172800: 36.11%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r08+tlrc.BRIK
++ CPU time = 0.330000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r09 pb00.ny002.r09.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r09.tcat+tlrc
++ Forming automask
 + Fixed clip level = 176.872070
 + Used gradual clip level = 173.384277 .. 187.637924
 + Number voxels above clip level = 53869
 + Clustering voxels ...
 + Largest cluster has 53869 voxels
 + Clustering voxels ...
 + Largest cluster has 53777 voxels
 + Filled   112 voxels in small holes; now have 53889 voxels
 + Filled     1 voxels in large holes; now have 53890 voxels
 + Clustering voxels ...
 + Largest cluster has 53890 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 118910 voxels
 + Mask now has 53890 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110488 voxels
++ 62312 voxels in the mask [out of 172800: 36.06%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r09+tlrc.BRIK
++ CPU time = 0.340000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r10 pb00.ny002.r10.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny002.r10.tcat+tlrc
++ Forming automask
 + Fixed clip level = 177.633041
 + Used gradual clip level = 174.252380 .. 188.285767
 + Number voxels above clip level = 53747
 + Clustering voxels ...
 + Largest cluster has 53747 voxels
 + Clustering voxels ...
 + Largest cluster has 53643 voxels
 + Filled   109 voxels in small holes; now have 53752 voxels
 + Clustering voxels ...
 + Largest cluster has 53752 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 119048 voxels
 + Mask now has 53752 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 110596 voxels
++ 62204 voxels in the mask [out of 172800: 36.00%]
++ first   3 x-planes are zero [from R]
++ last    3 x-planes are zero [from L]
++ first   1 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ Output dataset ./rm.mask_r10+tlrc.BRIK
++ CPU time = 0.340000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.HEAD rm.mask_r07+tlrc.HEAD rm.mask_r08+tlrc.HEAD rm.mask_r09+tlrc.HEAD rm.mask_r10+tlrc.HEAD -union -prefix full_mask.ny002
++ processing 10 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 10 volumes gives min count 0
++ voxel limits: 0 clipped, 63111 survived, 109689 were zero
++ writing result full_mask.ny002...
++ Output dataset ./full_mask.ny002+tlrc.BRIK
foreach run ( 01 02 03 04 05 06 07 08 09 10 )
3dTstat -prefix rm.mean_r01 pb00.ny002.r01.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb00.ny002.r01.tcat+tlrc -b rm.mean_r01+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r01.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb00.ny002.r02.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb00.ny002.r02.tcat+tlrc -b rm.mean_r02+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r02.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb00.ny002.r03.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb00.ny002.r03.tcat+tlrc -b rm.mean_r03+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r03.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r03.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r04 pb00.ny002.r04.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r04+tlrc.BRIK
3dcalc -a pb00.ny002.r04.tcat+tlrc -b rm.mean_r04+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r04.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r04.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r05 pb00.ny002.r05.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r05+tlrc.BRIK
3dcalc -a pb00.ny002.r05.tcat+tlrc -b rm.mean_r05+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r05.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r05.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r06 pb00.ny002.r06.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r06+tlrc.BRIK
3dcalc -a pb00.ny002.r06.tcat+tlrc -b rm.mean_r06+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r06.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r06.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r07 pb00.ny002.r07.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r07+tlrc.BRIK
3dcalc -a pb00.ny002.r07.tcat+tlrc -b rm.mean_r07+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r07.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r07.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r08 pb00.ny002.r08.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r08+tlrc.BRIK
3dcalc -a pb00.ny002.r08.tcat+tlrc -b rm.mean_r08+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r08.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r08.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r09 pb00.ny002.r09.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r09+tlrc.BRIK
3dcalc -a pb00.ny002.r09.tcat+tlrc -b rm.mean_r09+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r09.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r09.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r10 pb00.ny002.r10.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r10+tlrc.BRIK
3dcalc -a pb00.ny002.r10.tcat+tlrc -b rm.mean_r10+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny002.r10.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny002.r10.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 10 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 10 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 10 -show_censor_count -censor_prev_TR -censor_motion 0.5 motion_ny002
total number of censored TRs = 53
1deval -a motion_ny002_censor.1D -b outcount_ny002_censor.1D -expr a*b
3dDeconvolve -input pb01.ny002.r01.scale+tlrc.HEAD pb01.ny002.r02.scale+tlrc.HEAD pb01.ny002.r03.scale+tlrc.HEAD pb01.ny002.r04.scale+tlrc.HEAD pb01.ny002.r05.scale+tlrc.HEAD pb01.ny002.r06.scale+tlrc.HEAD pb01.ny002.r07.scale+tlrc.HEAD pb01.ny002.r08.scale+tlrc.HEAD pb01.ny002.r09.scale+tlrc.HEAD pb01.ny002.r10.scale+tlrc.HEAD -censor censor_ny002_combined_2.1D -polort 2 -float -local_times -num_stimts 18 -stim_times 1 stimuli/bil-afni_cond01.txt GAM -stim_label 1 english_speech_wrd -stim_times 2 stimuli/bil-afni_cond02.txt GAM -stim_label 2 english_speech_psd -stim_times 3 stimuli/bil-afni_cond03.txt GAM -stim_label 3 english_speech_cat -stim_times 4 stimuli/bil-afni_cond04.txt GAM -stim_label 4 english_print_psd -stim_times 5 stimuli/bil-afni_cond05.txt GAM -stim_label 5 english_print_wrd -stim_times 6 stimuli/bil-afni_cond06.txt GAM -stim_label 6 english_print_cat -stim_times 7 stimuli/bil-afni_cond07.txt GAM -stim_label 7 hebrew_speech_wrd -stim_times 8 stimuli/bil-afni_cond08.txt GAM -stim_label 8 hebrew_speech_psd -stim_times 9 stimuli/bil-afni_cond09.txt GAM -stim_label 9 hebrew_speech_cat -stim_times 10 stimuli/bil-afni_cond10.txt GAM -stim_label 10 hebrew_print_psd -stim_times 11 stimuli/bil-afni_cond11.txt GAM -stim_label 11 hebrew_print_wrd -stim_times 12 stimuli/bil-afni_cond12.txt GAM -stim_label 12 hebrew_print_cat -stim_file 13 motion_demean.1D[0] -stim_base 13 -stim_label 13 roll -stim_file 14 motion_demean.1D[1] -stim_base 14 -stim_label 14 pitch -stim_file 15 motion_demean.1D[2] -stim_base 15 -stim_label 15 yaw -stim_file 16 motion_demean.1D[3] -stim_base 16 -stim_label 16 dS -stim_file 17 motion_demean.1D[4] -stim_base 17 -stim_label 17 dL -stim_file 18 motion_demean.1D[5] -stim_base 18 -stim_label 18 dP -num_glt 17 -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat -glt_label 1 English_print_and_speech -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat -glt_label 2 Hebrew_print_and_speech -gltsym SYM: +english_speech_wrd +english_speech_psd                     
    +english_speech_cat -glt_label 3 English_speech -gltsym SYM: +english_print_psd +english_print_wrd +english_print_cat -glt_label 4 English_print -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat -glt_label 5 Hebrew_speech -gltsym SYM: +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat -glt_label 6 Hebrew_print -gltsym SYM: +english_speech_wrd -english_speech_psd -glt_label 7 English_speech_lexicality -gltsym SYM: +english_print_psd -english_print_wrd -glt_label 8 English_print_lexicality -gltsym SYM: +hebrew_speech_wrd -hebrew_speech_psd -glt_label 9 Hebrew_speech_lexicality -gltsym SYM: +hebrew_print_psd -hebrew_print_wrd -glt_label 10 Hebrew_print_lexicality -gltsym SYM: +english_speech_wrd -english_speech_psd -english_print_psd  
    +english_print_wrd -glt_label 11 LexicalityXmodality_English -gltsym SYM: +hebrew_speech_wrd -hebrew_speech_psd -hebrew_print_psd     
    +hebrew_print_wrd -glt_label 12 LexicalityXmodality_Hebrew -gltsym SYM: +english_print_psd +english_print_wrd +english_print_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 13 English_print-Hebrew_print -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat -glt_label 14 English_speech-Hebrew_speech -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat                  
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat                  
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 15 English-Hebrew -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -english_print_psd -english_print_wrd -english_print_cat -glt_label 16 English-speech-English_print -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 17 Hebrew_speech-Hebrew_print -jobs 16 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.ny002 -errts errts.ny002 -bucket stats.ny002
++ 3dDeconvolve: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ loading dataset pb01.ny002.r01.scale+tlrc.HEAD pb01.ny002.r02.scale+tlrc.HEAD pb01.ny002.r03.scale+tlrc.HEAD pb01.ny002.r04.scale+tlrc.HEAD pb01.ny002.r05.scale+tlrc.HEAD pb01.ny002.r06.scale+tlrc.HEAD pb01.ny002.r07.scale+tlrc.HEAD pb01.ny002.r08.scale+tlrc.HEAD pb01.ny002.r09.scale+tlrc.HEAD pb01.ny002.r10.scale+tlrc.HEAD
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 126 252 378 504 630 756 882 1008 1134
++ STAT automask has 61016 voxels (out of 172800 = 35.3%)
++ Skipping check for initial transients
++ Input polort=2; Longest run=252.0 s; Recommended minimum polort=2 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times 1 using LOCAL times
++ -stim_times 2 using LOCAL times
++ -stim_times 3 using LOCAL times
++ -stim_times 4 using LOCAL times
++ -stim_times 5 using LOCAL times
++ -stim_times 6 using LOCAL times
++ -stim_times 7 using LOCAL times
++ -stim_times 8 using LOCAL times
++ -stim_times 9 using LOCAL times
++ -stim_times 10 using LOCAL times
++ -stim_times 11 using LOCAL times
++ -stim_times 12 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd                     
    +english_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd +english_print_wrd +english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd -english_speech_psd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd -english_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd -hebrew_speech_psd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_print_psd -hebrew_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd -english_speech_psd -english_print_psd  
    +english_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0  -1   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd -hebrew_speech_psd -hebrew_print_psd     
    +hebrew_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0  -1   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd +english_print_wrd +english_print_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0  -1  -1  -1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat                  
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat                  
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -english_print_psd -english_print_wrd -english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
++ Number of time points: 1260 (before censor) ; 1204 (after)
 + Number of parameters:  48 [36 baseline ; 12 signal]
++ total shared memory needed = 1,802,649,600 bytes (about 1.8 billion [giga])
++ mmap() memory allocated: 1,802,649,600 bytes (about 1.8 billion [giga])
++ Memory required for output bricks = 1,802,649,600 bytes (about 1.8 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb01.ny002.r01.scale+tlrc.HEAD pb01.ny002.r02.scale+tlrc.HEAD pb01.ny002.r03.scale+tlrc.HEAD pb01.ny002.r04.scale+tlrc.HEAD pb01.ny002.r05.scale+tlrc.HEAD pb01.ny002.r06.scale+tlrc.HEAD pb01.ny002.r07.scale+tlrc.HEAD pb01.ny002.r08.scale+tlrc.HEAD pb01.ny002.r09.scale+tlrc.HEAD pb01.ny002.r10.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.ny002_REML -Rvar stats.ny002_REMLvar \
 -Rfitts fitts.ny002_REML -Rerrts errts.ny002_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (1204x48):  2.64835  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (1204x12):  1.07167  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (1204x36):  2.56433  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (1204x6):  1.9723  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (1204x30):  1.06795  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.30871e-16  ++ VERY GOOD ++
++ Matrix setup time = 10.43 s
++ Voxels in dataset: 172800
++ Voxels per job:    10800
++ Job #1: processing voxels 10800 to 21599; elapsed time=584.338
++ Job #2: processing voxels 21600 to 32399; elapsed time=584.356
++ Job #3: processing voxels 32400 to 43199; elapsed time=584.423
++ Job #4: processing voxels 43200 to 53999; elapsed time=584.439
++ Job #5: processing voxels 54000 to 64799; elapsed time=584.456
++ Job #6: processing voxels 64800 to 75599; elapsed time=584.473
++ Job #7: processing voxels 75600 to 86399; elapsed time=584.547
++ Job #8: processing voxels 86400 to 97199; elapsed time=584.565
++ Job #9: processing voxels 97200 to 107999; elapsed time=584.583
++ Job #10: processing voxels 108000 to 118799; elapsed time=584.600
++ Job #11: processing voxels 118800 to 129599; elapsed time=584.670
++ Job #12: processing voxels 129600 to 140399; elapsed time=584.687
++ Job #13: processing voxels 140400 to 151199; elapsed time=584.707
++ Job #14: processing voxels 151200 to 161999; elapsed time=584.723
++ Job #15: processing voxels 162000 to 172799; elapsed time=584.804
++ Job #0: processing voxels 0 to 10799; elapsed time=584.816
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #9 finished; elapsed time=895.768
++ Job #3 finished; elapsed time=895.798
++ Job #7 finished; elapsed time=895.847
++ Job #5 finished; elapsed time=895.916
++ Job #14 finished; elapsed time=896.025
++ Job #2 finished; elapsed time=896.078
++ Job #11 finished; elapsed time=896.149
++ Job #1 finished; elapsed time=896.160
++ Job #10 finished; elapsed time=896.320
++ Job #4 finished; elapsed time=896.423
++ Job #8 finished; elapsed time=896.465
++ Job #12 finished; elapsed time=896.533
9.
++ Job #0 waiting for children to finish; elapsed time=896.594
++ Job #6 finished; elapsed time=896.600
++ Job #15 finished; elapsed time=896.621
++ Job #13 finished; elapsed time=896.797
++ Job #0 now finishing up; elapsed time=896.827
++ Wrote bucket dataset into ./stats.ny002+tlrc.BRIK
 + created 59 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.ny002+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.ny002+tlrc.BRIK
++ Program finished; elapsed time=1305.077
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
-- no warnings for correlation matrix (cut = 0.400) --
tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb01.ny002.r01.scale+tlrc.HEAD pb01.ny002.r02.scale+tlrc.HEAD pb01.ny002.r03.scale+tlrc.HEAD pb01.ny002.r04.scale+tlrc.HEAD pb01.ny002.r05.scale+tlrc.HEAD pb01.ny002.r06.scale+tlrc.HEAD pb01.ny002.r07.scale+tlrc.HEAD pb01.ny002.r08.scale+tlrc.HEAD pb01.ny002.r09.scale+tlrc.HEAD pb01.ny002.r10.scale+tlrc.HEAD -fout -tout -Rbuck stats.ny002_REML -Rvar stats.ny002_REMLvar -Rfitts fitts.ny002_REML -Rerrts errts.ny002_REML -verb
++ 3dREMLfit: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 12
++ No mask ==> computing for all 172800 voxels
++ FDR automask has 61016 voxels (out of 172800 = 35.3%)
++ -----  matrix condition (1204x48):  2.64835  ++ VERY GOOD ++
 + masked off 111767 voxels for being all zero; 61033 left in mask
++ Converting dataset to vector image
 +  dataset = 871 million [mega] bytes
 +  vectim  = 308 million [mega] bytes
++ starting REML setup calculations; total CPU=10.09 Elapsed=480.07
 + X matrix: 22.001% of elements are nonzero
 + starting 12 OpenMP threads for REML setup
 + REML setup finished: matrix rows=1204 cols=48; 109*1 cases; total CPU=10.63 Elapsed=480.14
 +  average case bandwidth = 11.93
++ REML voxel loop: start 12 OpenMP threads 0123456789.01234567
 + ARMA voxel parameters estimated: total CPU=290.34 Elapsed=511.95
++ GLSQ voxel loop: 0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=360.54 Elapsed=595.44
++ Output dataset ./stats.ny002_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.ny002_REML+tlrc.BRIK
++ Output dataset ./errts.ny002_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.ny002_REML+tlrc
 + Added 59 FDR curves to dataset stats.ny002_REML+tlrc
++ Output dataset ./stats.ny002_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=424.66 Elapsed=928.86
if ( 0 != 0 ) then
3dTcat -prefix all_runs.ny002 pb01.ny002.r01.scale+tlrc.HEAD pb01.ny002.r02.scale+tlrc.HEAD pb01.ny002.r03.scale+tlrc.HEAD pb01.ny002.r04.scale+tlrc.HEAD pb01.ny002.r05.scale+tlrc.HEAD pb01.ny002.r06.scale+tlrc.HEAD pb01.ny002.r07.scale+tlrc.HEAD pb01.ny002.r08.scale+tlrc.HEAD pb01.ny002.r09.scale+tlrc.HEAD pb01.ny002.r10.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTstat -mean -prefix rm.signal.all all_runs.ny002+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.ny002_REML+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -c full_mask.ny002+tlrc -expr c*a/b -prefix TSNR.ny002
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.ny002+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.ny002_REML+tlrc
++ 3dTnorm: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.ny002+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
+++ 63111 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0641027
1dcat X.nocensor.xmat.1D[30]
1dcat X.nocensor.xmat.1D[31]
1dcat X.nocensor.xmat.1D[32]
1dcat X.nocensor.xmat.1D[33]
1dcat X.nocensor.xmat.1D[34]
1dcat X.nocensor.xmat.1D[35]
1dcat X.nocensor.xmat.1D[36]
1dcat X.nocensor.xmat.1D[37]
1dcat X.nocensor.xmat.1D[38]
1dcat X.nocensor.xmat.1D[39]
1dcat X.nocensor.xmat.1D[40]
1dcat X.nocensor.xmat.1D[41]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[30..41]
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[30..41]
gen_epi_review.py -script @epi_review.ny002 -dsets pb00.ny002.r01.tcat+tlrc.HEAD pb00.ny002.r02.tcat+tlrc.HEAD pb00.ny002.r03.tcat+tlrc.HEAD pb00.ny002.r04.tcat+tlrc.HEAD pb00.ny002.r05.tcat+tlrc.HEAD pb00.ny002.r06.tcat+tlrc.HEAD pb00.ny002.r07.tcat+tlrc.HEAD pb00.ny002.r08.tcat+tlrc.HEAD pb00.ny002.r09.tcat+tlrc.HEAD pb00.ny002.r10.tcat+tlrc.HEAD
gen_ss_review_scripts.py -mot_limit 0.5 -out_limit 0.1 -motion_dset dfile_rall.1D -exit0
** guess tcat: failed to determine subject ID from pb00 files
** guess rm_trs: no pb00 dset to detect removed TRs
** failed to find volreg dset, continuing...
** warning: failed to test sid/view with dset check on pb*r*1*volreg+tlrc.HEAD
** failed to guess align_anat (continuing)
** warning: basic script, missing variable rm_trs
++ writing ss review basic:          @ss_review_basic
** no volreg_dset, skipping align check...
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -f rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.BRIK rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.BRIK rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.BRIK rm.mask_r06+tlrc.HEAD rm.mask_r07+tlrc.BRIK rm.mask_r07+tlrc.HEAD rm.mask_r08+tlrc.BRIK rm.mask_r08+tlrc.HEAD rm.mask_r09+tlrc.BRIK rm.mask_r09+tlrc.HEAD rm.mask_r10+tlrc.BRIK rm.mask_r10+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.mean_r02+tlrc.BRIK rm.mean_r02+tlrc.HEAD rm.mean_r03+tlrc.BRIK rm.mean_r03+tlrc.HEAD rm.mean_r04+tlrc.BRIK rm.mean_r04+tlrc.HEAD rm.mean_r05+tlrc.BRIK rm.mean_r05+tlrc.HEAD rm.mean_r06+tlrc.BRIK rm.mean_r06+tlrc.HEAD rm.mean_r07+tlrc.BRIK rm.mean_r07+tlrc.HEAD rm.mean_r08+tlrc.BRIK rm.mean_r08+tlrc.HEAD rm.mean_r09+tlrc.BRIK rm.mean_r09+tlrc.HEAD rm.mean_r10+tlrc.BRIK rm.mean_r10+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D rm.out.cen.r07.1D rm.out.cen.r08.1D rm.out.cen.r09.1D rm.out.cen.r10.1D rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD
tee out.ss_review.ny002.txt
if ( -e @ss_review_basic ) ./@ss_review_basic
./@ss_review_basic

subject ID                : ny002
TRs removed (per run)     : UNKNOWN
num stim classes provided : 12
final anatomy dset        : anat_final.ny002+tlrc.HEAD
final stats dset          : stats.ny002+tlrc.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.5
num TRs above mot limit   : 29
average motion (per TR)   : 0.136305
average censored motion   : 0.120731
max motion displacement   : 4.85177
max censored displacement : 4.85177
outlier limit             : 0.1
average outlier frac (TR) : 0.0041707
num TRs above out limit   : 13

num runs found            : 10
num TRs per run           : 126 126 126 126 126 126 126 126 126 126
num TRs per run (applied) : 118 124 120 120 121 110 119 123 123 126
num TRs per run (censored): 8 2 6 6 5 16 7 3 3 0
fraction censored per run : 0.0634921 0.015873 0.047619 0.047619 0.0396825 0.126984 0.0555556 0.0238095 0.0238095 0
TRs total (uncensored)    : 1260
TRs total                 : 1204
degrees of freedom used   : 48
degrees of freedom left   : 1156

TRs censored              : 56
censor fraction           : 0.044444
num regs of interest      : 12
num TRs per stim (orig)   : 191 197 105 185 202 104 188 196 107 196 188 102
num TRs censored per stim : 9 10 1 4 6 3 6 5 4 11 14 9
fraction TRs censored     : 0.047 0.051 0.010 0.022 0.030 0.029 0.032 0.026 0.037 0.056 0.074 0.088
ave mot per sresp (orig)  : 0.133030 0.132269 0.108954 0.137488 0.125712 0.128272 0.142221 0.125367 0.126935 0.140298 0.152134 0.157189
ave mot per sresp (cens)  : 0.118699 0.117476 0.099749 0.127931 0.117976 0.123438 0.128511 0.116011 0.111301 0.115130 0.123291 0.132742

TSNR average              : 169.52
global correlation (GCOR) : 0.0641027
maximum F-stat (masked)   : 40.7871


cd ..
echo execution finished: `date`
date
execution finished: Wed Oct  8 12:49:42 EDT 2014
