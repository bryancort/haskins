echo auto-generated by afni_proc.py, Wed Oct  8 10:50:13 2014
auto-generated by afni_proc.py, Wed Oct  8 10:50:13 2014
echo (version 4.20, Jul 11, 2014)
(version 4.20, Jul 11, 2014)
echo execution started: `date`
date
execution started: Wed Oct  8 10:50:13 EDT 2014
afni -ver
Version AFNI_2011_12_21_1014
[[Precompiled binary macosx_10.7_Intel_64: Jul 18 2014]]
afni_history -check_date 13 May 2014
-- is current: afni_history as new as: 13 May 2014
               most recent entry is:   18 Jul 2014
if ( 0 ) then
if ( 0 > 0 ) then
set subj = ny001
endif
set output_dir = ny001.scale
if ( -d ny001.scale ) then
set runs = ( `count -digits 2 1 6` )
count -digits 2 1 6
mkdir ny001.scale
mkdir ny001.scale/stimuli
cp stim_times/bilingual/bil-afni_cond01.txt stim_times/bilingual/bil-afni_cond02.txt stim_times/bilingual/bil-afni_cond03.txt stim_times/bilingual/bil-afni_cond04.txt stim_times/bilingual/bil-afni_cond05.txt stim_times/bilingual/bil-afni_cond06.txt stim_times/bilingual/bil-afni_cond07.txt stim_times/bilingual/bil-afni_cond08.txt stim_times/bilingual/bil-afni_cond09.txt stim_times/bilingual/bil-afni_cond10.txt stim_times/bilingual/bil-afni_cond11.txt stim_times/bilingual/bil-afni_cond12.txt ny001.scale/stimuli
cp ny001.results/dfile_rall.1D ny001.scale
cp -rv ny001.results/anat_final.ny001+tlrc.BRIK ny001.results/anat_final.ny001+tlrc.HEAD ny001.scale
ny001.results/anat_final.ny001+tlrc.BRIK -> ny001.scale/anat_final.ny001+tlrc.BRIK
ny001.results/anat_final.ny001+tlrc.HEAD -> ny001.scale/anat_final.ny001+tlrc.HEAD
3dTcat -prefix ny001.scale/pb00.ny001.r01.tcat ny001.results/pb03.ny001.r01.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny001.scale/pb00.ny001.r02.tcat ny001.results/pb03.ny001.r02.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny001.scale/pb00.ny001.r03.tcat ny001.results/pb03.ny001.r03.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny001.scale/pb00.ny001.r04.tcat ny001.results/pb03.ny001.r04.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny001.scale/pb00.ny001.r05.tcat ny001.results/pb03.ny001.r05.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTcat -prefix ny001.scale/pb00.ny001.r06.tcat ny001.results/pb03.ny001.r06.blur+tlrc[0..$]
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
set tr_counts = ( 126 126 126 126 126 126 )
cd ny001.scale
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 04 05 06 )
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny001.r01.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50669 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny001.r02.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50365 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny001.r03.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50437 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny001.r04.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50665 voxels passed mask/clip
1deval -a outcount.r04.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r04.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny001.r05.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50605 voxels passed mask/clip
1deval -a outcount.r05.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r05.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 2 -legendre pb00.ny001.r06.tcat+tlrc
++ 3dToutcount: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ 50525 voxels passed mask/clip
1deval -a outcount.r06.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r06.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D outcount.r04.1D outcount.r05.1D outcount.r06.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D
foreach run ( 01 02 03 04 05 06 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb00.ny001.r01.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny001.r01.tcat+tlrc
++ Forming automask
 + Fixed clip level = 192.616943
 + Used gradual clip level = 181.069107 .. 210.059952
 + Number voxels above clip level = 50654
 + Clustering voxels ...
 + Largest cluster has 50654 voxels
 + Clustering voxels ...
 + Largest cluster has 50563 voxels
 + Filled   107 voxels in small holes; now have 50670 voxels
 + Clustering voxels ...
 + Largest cluster has 50669 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122131 voxels
 + Mask now has 50669 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 113926 voxels
++ 58874 voxels in the mask [out of 172800: 34.07%]
++ first   3 x-planes are zero [from R]
++ last    4 x-planes are zero [from L]
++ first   4 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   2 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r01+tlrc.BRIK
++ CPU time = 0.180000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb00.ny001.r02.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny001.r02.tcat+tlrc
++ Forming automask
 + Fixed clip level = 192.723251
 + Used gradual clip level = 181.954453 .. 209.957214
 + Number voxels above clip level = 50363
 + Clustering voxels ...
 + Largest cluster has 50362 voxels
 + Clustering voxels ...
 + Largest cluster has 50263 voxels
 + Filled   102 voxels in small holes; now have 50365 voxels
 + Clustering voxels ...
 + Largest cluster has 50365 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122435 voxels
 + Mask now has 50365 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 114300 voxels
++ 58500 voxels in the mask [out of 172800: 33.85%]
++ first   3 x-planes are zero [from R]
++ last    4 x-planes are zero [from L]
++ first   4 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   3 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r02+tlrc.BRIK
++ CPU time = 0.180000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb00.ny001.r03.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny001.r03.tcat+tlrc
++ Forming automask
 + Fixed clip level = 191.219833
 + Used gradual clip level = 178.315140 .. 207.519897
 + Number voxels above clip level = 50429
 + Clustering voxels ...
 + Largest cluster has 50429 voxels
 + Clustering voxels ...
 + Largest cluster has 50336 voxels
 + Filled   101 voxels in small holes; now have 50437 voxels
 + Clustering voxels ...
 + Largest cluster has 50437 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122363 voxels
 + Mask now has 50437 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 114164 voxels
++ 58636 voxels in the mask [out of 172800: 33.93%]
++ first   3 x-planes are zero [from R]
++ last    4 x-planes are zero [from L]
++ first   4 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   2 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r03+tlrc.BRIK
++ CPU time = 0.180000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r04 pb00.ny001.r04.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny001.r04.tcat+tlrc
++ Forming automask
 + Fixed clip level = 191.086334
 + Used gradual clip level = 177.587372 .. 207.859482
 + Number voxels above clip level = 50652
 + Clustering voxels ...
 + Largest cluster has 50652 voxels
 + Clustering voxels ...
 + Largest cluster has 50549 voxels
 + Filled   116 voxels in small holes; now have 50665 voxels
 + Clustering voxels ...
 + Largest cluster has 50665 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122135 voxels
 + Mask now has 50665 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 113985 voxels
++ 58815 voxels in the mask [out of 172800: 34.04%]
++ first   3 x-planes are zero [from R]
++ last    4 x-planes are zero [from L]
++ first   4 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   2 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r04+tlrc.BRIK
++ CPU time = 0.180000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r05 pb00.ny001.r05.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny001.r05.tcat+tlrc
++ Forming automask
 + Fixed clip level = 190.557419
 + Used gradual clip level = 178.433548 .. 207.374100
 + Number voxels above clip level = 50601
 + Clustering voxels ...
 + Largest cluster has 50601 voxels
 + Clustering voxels ...
 + Largest cluster has 50497 voxels
 + Filled   108 voxels in small holes; now have 50605 voxels
 + Clustering voxels ...
 + Largest cluster has 50605 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122195 voxels
 + Mask now has 50605 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 113979 voxels
++ 58821 voxels in the mask [out of 172800: 34.04%]
++ first   3 x-planes are zero [from R]
++ last    4 x-planes are zero [from L]
++ first   4 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   2 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r05+tlrc.BRIK
++ CPU time = 0.190000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r06 pb00.ny001.r06.tcat+tlrc
++ 3dAutomask: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb00.ny001.r06.tcat+tlrc
++ Forming automask
 + Fixed clip level = 191.045319
 + Used gradual clip level = 178.992737 .. 208.142456
 + Number voxels above clip level = 50520
 + Clustering voxels ...
 + Largest cluster has 50520 voxels
 + Clustering voxels ...
 + Largest cluster has 50415 voxels
 + Filled   110 voxels in small holes; now have 50525 voxels
 + Clustering voxels ...
 + Largest cluster has 50525 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 122275 voxels
 + Mask now has 50525 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 114126 voxels
++ 58674 voxels in the mask [out of 172800: 33.95%]
++ first   3 x-planes are zero [from R]
++ last    4 x-planes are zero [from L]
++ first   4 y-planes are zero [from A]
++ last    2 y-planes are zero [from P]
++ first   2 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ Output dataset ./rm.mask_r06+tlrc.BRIK
++ CPU time = 0.180000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.HEAD -union -prefix full_mask.ny001
++ processing 6 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 6 volumes gives min count 0
++ voxel limits: 0 clipped, 59412 survived, 113388 were zero
++ writing result full_mask.ny001...
++ Output dataset ./full_mask.ny001+tlrc.BRIK
foreach run ( 01 02 03 04 05 06 )
3dTstat -prefix rm.mean_r01 pb00.ny001.r01.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb00.ny001.r01.tcat+tlrc -b rm.mean_r01+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny001.r01.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny001.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb00.ny001.r02.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb00.ny001.r02.tcat+tlrc -b rm.mean_r02+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny001.r02.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny001.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb00.ny001.r03.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb00.ny001.r03.tcat+tlrc -b rm.mean_r03+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny001.r03.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny001.r03.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r04 pb00.ny001.r04.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r04+tlrc.BRIK
3dcalc -a pb00.ny001.r04.tcat+tlrc -b rm.mean_r04+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny001.r04.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny001.r04.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r05 pb00.ny001.r05.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r05+tlrc.BRIK
3dcalc -a pb00.ny001.r05.tcat+tlrc -b rm.mean_r05+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny001.r05.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny001.r05.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r06 pb00.ny001.r06.tcat+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r06+tlrc.BRIK
3dcalc -a pb00.ny001.r06.tcat+tlrc -b rm.mean_r06+tlrc -expr min(200, a/b*100)*step(a)*step(b) -prefix pb01.ny001.r06.scale
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb01.ny001.r06.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 6 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 6 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 6 -show_censor_count -censor_prev_TR -censor_motion 0.5 motion_ny001
total number of censored TRs = 10
1deval -a motion_ny001_censor.1D -b outcount_ny001_censor.1D -expr a*b
3dDeconvolve -input pb01.ny001.r01.scale+tlrc.HEAD pb01.ny001.r02.scale+tlrc.HEAD pb01.ny001.r03.scale+tlrc.HEAD pb01.ny001.r04.scale+tlrc.HEAD pb01.ny001.r05.scale+tlrc.HEAD pb01.ny001.r06.scale+tlrc.HEAD -censor censor_ny001_combined_2.1D -polort 2 -float -local_times -num_stimts 18 -stim_times 1 stimuli/bil-afni_cond01.txt GAM -stim_label 1 english_speech_wrd -stim_times 2 stimuli/bil-afni_cond02.txt GAM -stim_label 2 english_speech_psd -stim_times 3 stimuli/bil-afni_cond03.txt GAM -stim_label 3 english_speech_cat -stim_times 4 stimuli/bil-afni_cond04.txt GAM -stim_label 4 english_print_psd -stim_times 5 stimuli/bil-afni_cond05.txt GAM -stim_label 5 english_print_wrd -stim_times 6 stimuli/bil-afni_cond06.txt GAM -stim_label 6 english_print_cat -stim_times 7 stimuli/bil-afni_cond07.txt GAM -stim_label 7 hebrew_speech_wrd -stim_times 8 stimuli/bil-afni_cond08.txt GAM -stim_label 8 hebrew_speech_psd -stim_times 9 stimuli/bil-afni_cond09.txt GAM -stim_label 9 hebrew_speech_cat -stim_times 10 stimuli/bil-afni_cond10.txt GAM -stim_label 10 hebrew_print_psd -stim_times 11 stimuli/bil-afni_cond11.txt GAM -stim_label 11 hebrew_print_wrd -stim_times 12 stimuli/bil-afni_cond12.txt GAM -stim_label 12 hebrew_print_cat -stim_file 13 motion_demean.1D[0] -stim_base 13 -stim_label 13 roll -stim_file 14 motion_demean.1D[1] -stim_base 14 -stim_label 14 pitch -stim_file 15 motion_demean.1D[2] -stim_base 15 -stim_label 15 yaw -stim_file 16 motion_demean.1D[3] -stim_base 16 -stim_label 16 dS -stim_file 17 motion_demean.1D[4] -stim_base 17 -stim_label 17 dL -stim_file 18 motion_demean.1D[5] -stim_base 18 -stim_label 18 dP -num_glt 17 -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat -glt_label 1 English_print_and_speech -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat -glt_label 2 Hebrew_print_and_speech -gltsym SYM: +english_speech_wrd +english_speech_psd                     
    +english_speech_cat -glt_label 3 English_speech -gltsym SYM: +english_print_psd +english_print_wrd +english_print_cat -glt_label 4 English_print -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat -glt_label 5 Hebrew_speech -gltsym SYM: +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat -glt_label 6 Hebrew_print -gltsym SYM: +english_speech_wrd -english_speech_psd -glt_label 7 English_speech_lexicality -gltsym SYM: +english_print_psd -english_print_wrd -glt_label 8 English_print_lexicality -gltsym SYM: +hebrew_speech_wrd -hebrew_speech_psd -glt_label 9 Hebrew_speech_lexicality -gltsym SYM: +hebrew_print_psd -hebrew_print_wrd -glt_label 10 Hebrew_print_lexicality -gltsym SYM: +english_speech_wrd -english_speech_psd -english_print_psd  
    +english_print_wrd -glt_label 11 LexicalityXmodality_English -gltsym SYM: +hebrew_speech_wrd -hebrew_speech_psd -hebrew_print_psd     
    +hebrew_print_wrd -glt_label 12 LexicalityXmodality_Hebrew -gltsym SYM: +english_print_psd +english_print_wrd +english_print_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 13 English_print-Hebrew_print -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat -glt_label 14 English_speech-Hebrew_speech -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat                  
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat                  
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 15 English-Hebrew -gltsym SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -english_print_psd -english_print_wrd -english_print_cat -glt_label 16 English-speech-English_print -gltsym SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat -glt_label 17 Hebrew_speech-Hebrew_print -jobs 16 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.ny001 -errts errts.ny001 -bucket stats.ny001
++ 3dDeconvolve: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ loading dataset pb01.ny001.r01.scale+tlrc.HEAD pb01.ny001.r02.scale+tlrc.HEAD pb01.ny001.r03.scale+tlrc.HEAD pb01.ny001.r04.scale+tlrc.HEAD pb01.ny001.r05.scale+tlrc.HEAD pb01.ny001.r06.scale+tlrc.HEAD
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 126 252 378 504 630
++ STAT automask has 57461 voxels (out of 172800 = 33.3%)
++ Skipping check for initial transients
++ Input polort=2; Longest run=252.0 s; Recommended minimum polort=2 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times 1 using LOCAL times
*+ WARNING: '-stim_times 1' file 'stimuli/bil-afni_cond01.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 2 using LOCAL times
*+ WARNING: '-stim_times 2' file 'stimuli/bil-afni_cond02.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 3 using LOCAL times
*+ WARNING: '-stim_times 3' file 'stimuli/bil-afni_cond03.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 4 using LOCAL times
*+ WARNING: '-stim_times 4' file 'stimuli/bil-afni_cond04.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 5 using LOCAL times
*+ WARNING: '-stim_times 5' file 'stimuli/bil-afni_cond05.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 6 using LOCAL times
*+ WARNING: '-stim_times 6' file 'stimuli/bil-afni_cond06.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 7 using LOCAL times
*+ WARNING: '-stim_times 7' file 'stimuli/bil-afni_cond07.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 8 using LOCAL times
*+ WARNING: '-stim_times 8' file 'stimuli/bil-afni_cond08.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 9 using LOCAL times
*+ WARNING: '-stim_times 9' file 'stimuli/bil-afni_cond09.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 10 using LOCAL times
*+ WARNING: '-stim_times 10' file 'stimuli/bil-afni_cond10.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 11 using LOCAL times
*+ WARNING: '-stim_times 11' file 'stimuli/bil-afni_cond11.txt' has 10 rows, but dataset has 6 time blocks
++ -stim_times 12 using LOCAL times
*+ WARNING: '-stim_times 12' file 'stimuli/bil-afni_cond12.txt' has 10 rows, but dataset has 6 time blocks
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd                     
    +english_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd +english_print_wrd +english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_print_psd +hebrew_print_wrd +hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd -english_speech_psd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd -english_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd -hebrew_speech_psd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_print_psd -hebrew_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd -english_speech_psd -english_print_psd  
    +english_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0  -1   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd -hebrew_speech_psd -hebrew_print_psd     
    +hebrew_print_wrd':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1  -1   0  -1   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_print_psd +english_print_wrd +english_print_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0  -1  -1  -1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    +english_print_psd +english_print_wrd +english_print_cat                  
    -hebrew_speech_wrd -hebrew_speech_psd -hebrew_speech_cat                  
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1  -1  -1  -1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +english_speech_wrd +english_speech_psd +english_speech_cat 
    -english_print_psd -english_print_wrd -english_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +hebrew_speech_wrd +hebrew_speech_psd +hebrew_speech_cat    
    -hebrew_print_psd -hebrew_print_wrd -hebrew_print_cat':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
++ Number of time points: 756 (before censor) ; 739 (after)
 + Number of parameters:  36 [24 baseline ; 12 signal]
++ total shared memory needed = 1,105,920,000 bytes (about 1.1 billion [giga])
++ mmap() memory allocated: 1,105,920,000 bytes (about 1.1 billion [giga])
++ Memory required for output bricks = 1,105,920,000 bytes (about 1.1 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb01.ny001.r01.scale+tlrc.HEAD pb01.ny001.r02.scale+tlrc.HEAD pb01.ny001.r03.scale+tlrc.HEAD pb01.ny001.r04.scale+tlrc.HEAD pb01.ny001.r05.scale+tlrc.HEAD pb01.ny001.r06.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.ny001_REML -Rvar stats.ny001_REMLvar \
 -Rfitts fitts.ny001_REML -Rerrts errts.ny001_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (739x36):  2.60018  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (739x12):  1.07598  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (739x24):  2.51605  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (739x6):  2.15359  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (739x18):  1.12063  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 5.04303e-16  ++ VERY GOOD ++
++ Matrix setup time = 1.96 s
++ Voxels in dataset: 172800
++ Voxels per job:    10800
++ Job #1: processing voxels 10800 to 21599; elapsed time=6.180
++ Job #2: processing voxels 21600 to 32399; elapsed time=6.196
++ Job #3: processing voxels 32400 to 43199; elapsed time=6.210
++ Job #4: processing voxels 43200 to 53999; elapsed time=6.226
++ Job #5: processing voxels 54000 to 64799; elapsed time=6.241
++ Job #6: processing voxels 64800 to 75599; elapsed time=6.258
++ Job #7: processing voxels 75600 to 86399; elapsed time=6.270
++ Job #8: processing voxels 86400 to 97199; elapsed time=6.286
++ Job #9: processing voxels 97200 to 107999; elapsed time=6.305
++ Job #10: processing voxels 108000 to 118799; elapsed time=6.322
++ Job #11: processing voxels 118800 to 129599; elapsed time=6.337
++ Job #12: processing voxels 129600 to 140399; elapsed time=6.352
++ Job #13: processing voxels 140400 to 151199; elapsed time=6.366
++ Job #14: processing voxels 151200 to 161999; elapsed time=6.380
++ Job #15: processing voxels 162000 to 172799; elapsed time=6.395
++ Job #0: processing voxels 0 to 10799; elapsed time=6.407
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #3 finished; elapsed time=88.601
++ Job #5 finished; elapsed time=88.623
++ Job #10 finished; elapsed time=88.871
++ Job #11 finished; elapsed time=88.954
++ Job #1 finished; elapsed time=89.049
++ Job #7 finished; elapsed time=89.142
++ Job #2 finished; elapsed time=89.290
++ Job #8 finished; elapsed time=89.368
++ Job #6 finished; elapsed time=89.480
9.
++ Job #0 waiting for children to finish; elapsed time=89.484
++ Job #15 finished; elapsed time=89.556
++ Job #4 finished; elapsed time=89.607
++ Job #14 finished; elapsed time=89.613
++ Job #9 finished; elapsed time=89.629
++ Job #13 finished; elapsed time=89.846
++ Job #12 finished; elapsed time=89.992
++ Job #0 now finishing up; elapsed time=90.398
++ Wrote bucket dataset into ./stats.ny001+tlrc.BRIK
 + created 59 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.ny001+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.ny001+tlrc.BRIK
++ Program finished; elapsed time=479.800
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt
-- no warnings for correlation matrix (cut = 0.400) --
tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb01.ny001.r01.scale+tlrc.HEAD pb01.ny001.r02.scale+tlrc.HEAD pb01.ny001.r03.scale+tlrc.HEAD pb01.ny001.r04.scale+tlrc.HEAD pb01.ny001.r05.scale+tlrc.HEAD pb01.ny001.r06.scale+tlrc.HEAD -fout -tout -Rbuck stats.ny001_REML -Rvar stats.ny001_REMLvar -Rfitts fitts.ny001_REML -Rerrts errts.ny001_REML -verb
++ 3dREMLfit: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 12
++ No mask ==> computing for all 172800 voxels
++ FDR automask has 57461 voxels (out of 172800 = 33.3%)
++ -----  matrix condition (739x36):  2.60018  ++ VERY GOOD ++
 + masked off 115322 voxels for being all zero; 57478 left in mask
++ Converting dataset to vector image
 +  dataset = 523 million [mega] bytes
 +  vectim  = 174 million [mega] bytes
++ starting REML setup calculations; total CPU=5.42 Elapsed=13.13
 + X matrix: 29.353% of elements are nonzero
 + starting 12 OpenMP threads for REML setup
 + REML setup finished: matrix rows=739 cols=36; 109*1 cases; total CPU=5.66 Elapsed=13.17
 +  average case bandwidth = 12.24
++ REML voxel loop: start 12 OpenMP threads 0123456789.0123456
 + ARMA voxel parameters estimated: total CPU=164.25 Elapsed=38.61
++ GLSQ voxel loop: 0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=196.39 Elapsed=71.39
++ Output dataset ./stats.ny001_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.ny001_REML+tlrc.BRIK
++ Output dataset ./errts.ny001_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.ny001_REML+tlrc
 + Added 59 FDR curves to dataset stats.ny001_REML+tlrc
++ Output dataset ./stats.ny001_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=238.86 Elapsed=604.98
if ( 0 != 0 ) then
3dTcat -prefix all_runs.ny001 pb01.ny001.r01.scale+tlrc.HEAD pb01.ny001.r02.scale+tlrc.HEAD pb01.ny001.r03.scale+tlrc.HEAD pb01.ny001.r04.scale+tlrc.HEAD pb01.ny001.r05.scale+tlrc.HEAD pb01.ny001.r06.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
3dTstat -mean -prefix rm.signal.all all_runs.ny001+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.ny001_REML+tlrc
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -c full_mask.ny001+tlrc -expr c*a/b -prefix TSNR.ny001
++ 3dcalc: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.ny001+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.ny001_REML+tlrc
++ 3dTnorm: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.ny001+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
+++ 59412 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0799452
1dcat X.nocensor.xmat.1D[18]
1dcat X.nocensor.xmat.1D[19]
1dcat X.nocensor.xmat.1D[20]
1dcat X.nocensor.xmat.1D[21]
1dcat X.nocensor.xmat.1D[22]
1dcat X.nocensor.xmat.1D[23]
1dcat X.nocensor.xmat.1D[24]
1dcat X.nocensor.xmat.1D[25]
1dcat X.nocensor.xmat.1D[26]
1dcat X.nocensor.xmat.1D[27]
1dcat X.nocensor.xmat.1D[28]
1dcat X.nocensor.xmat.1D[29]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[18..29]
++ 3dTstat: AFNI version=AFNI_2011_12_21_1014 (Jul 18 2014) [64-bit]
++ Authored by: KR Hammett & RW Cox
*+ WARNING: Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[18..29]
gen_epi_review.py -script @epi_review.ny001 -dsets pb00.ny001.r01.tcat+tlrc.HEAD pb00.ny001.r02.tcat+tlrc.HEAD pb00.ny001.r03.tcat+tlrc.HEAD pb00.ny001.r04.tcat+tlrc.HEAD pb00.ny001.r05.tcat+tlrc.HEAD pb00.ny001.r06.tcat+tlrc.HEAD
gen_ss_review_scripts.py -mot_limit 0.5 -out_limit 0.1 -motion_dset dfile_rall.1D -exit0
** guess tcat: failed to determine subject ID from pb00 files
** guess rm_trs: no pb00 dset to detect removed TRs
** failed to find volreg dset, continuing...
** warning: failed to test sid/view with dset check on pb*r*1*volreg+tlrc.HEAD
** failed to guess align_anat (continuing)
** warning: basic script, missing variable rm_trs
++ writing ss review basic:          @ss_review_basic
** no volreg_dset, skipping align check...
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -f rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK rm.mask_r03+tlrc.HEAD rm.mask_r04+tlrc.BRIK rm.mask_r04+tlrc.HEAD rm.mask_r05+tlrc.BRIK rm.mask_r05+tlrc.HEAD rm.mask_r06+tlrc.BRIK rm.mask_r06+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.mean_r02+tlrc.BRIK rm.mean_r02+tlrc.HEAD rm.mean_r03+tlrc.BRIK rm.mean_r03+tlrc.HEAD rm.mean_r04+tlrc.BRIK rm.mean_r04+tlrc.HEAD rm.mean_r05+tlrc.BRIK rm.mean_r05+tlrc.HEAD rm.mean_r06+tlrc.BRIK rm.mean_r06+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.out.cen.r04.1D rm.out.cen.r05.1D rm.out.cen.r06.1D rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD
tee out.ss_review.ny001.txt
if ( -e @ss_review_basic ) ./@ss_review_basic
./@ss_review_basic

subject ID                : ny001
TRs removed (per run)     : UNKNOWN
num stim classes provided : 12
final anatomy dset        : anat_final.ny001+tlrc.HEAD
final stats dset          : stats.ny001+tlrc.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.5
num TRs above mot limit   : 5
average motion (per TR)   : 0.0734695
average censored motion   : 0.0689868
max motion displacement   : 2.5419
max censored displacement : 2.31593
outlier limit             : 0.1
average outlier frac (TR) : 0.00339443
num TRs above out limit   : 7

num runs found            : 6
num TRs per run           : 126 126 126 126 126 126
num TRs per run (applied) : 124 120 126 124 126 119
num TRs per run (censored): 2 6 0 2 0 7
fraction censored per run : 0.015873 0.047619 0 0.015873 0 0.0555556
TRs total (uncensored)    : 756
TRs total                 : 739
degrees of freedom used   : 36
degrees of freedom left   : 703

TRs censored              : 17
censor fraction           : 0.022487
num regs of interest      : 12
num TRs per stim (orig)   : 115 121 62 109 124 62 112 118 66 116 118 62
num TRs censored per stim : 3 6 3 2 7 0 2 0 2 2 0 0
fraction TRs censored     : 0.026 0.050 0.048 0.018 0.056 0.000 0.018 0.000 0.030 0.017 0.000 0.000
ave mot per sresp (orig)  : 0.061382 0.054641 0.057439 0.086627 0.096009 0.079266 0.069343 0.056471 0.068447 0.080189 0.073585 0.081114
ave mot per sresp (cens)  : 0.062006 0.055690 0.058784 0.082075 0.073224 0.079266 0.063002 0.056471 0.061300 0.076383 0.073585 0.081114

TSNR average              : 171.101
global correlation (GCOR) : 0.0799452
maximum F-stat (masked)   : 38.8421


cd ..
echo execution finished: `date`
date
execution finished: Wed Oct  8 11:49:09 EDT 2014
